'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class Entities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=Entities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property AspNetUsers() As DbSet(Of AspNetUsers)
    Public Overridable Property AspNetRoles() As DbSet(Of AspNetRoles)

    Public Overridable Function spAllEmpresa(organizacionId As Nullable(Of Integer)) As ObjectResult(Of spAllEmpresa_Result)
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllEmpresa_Result)("spAllEmpresa", organizacionIdParameter)
    End Function

    Public Overridable Function spAllRegimenFiscal() As ObjectResult(Of spAllRegimenFiscal_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllRegimenFiscal_Result)("spAllRegimenFiscal")
    End Function

    Public Overridable Function spConsEmpresa_EmpresaDefault(usuarioID As String, organizacionId As Nullable(Of Integer)) As ObjectResult(Of spConsEmpresa_EmpresaDefault_Result)
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID IsNot Nothing, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsEmpresa_EmpresaDefault_Result)("spConsEmpresa_EmpresaDefault", usuarioIDParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spConsEmpresa_EmpresaId(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As ObjectResult(Of spConsEmpresa_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsEmpresa_EmpresaId_Result)("spConsEmpresa_EmpresaId", empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spConsEmpresa_RegimenFiscal(empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsEmpresa_RegimenFiscal_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsEmpresa_RegimenFiscal_Result)("spConsEmpresa_RegimenFiscal", empresaIdParameter)
    End Function

    Public Overridable Function spConsOrganizacion(usuarioId As String) As ObjectResult(Of spConsOrganizacion_Result)
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsOrganizacion_Result)("spConsOrganizacion", usuarioIdParameter)
    End Function

    Public Overridable Function spDelEmpresa(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), usuarioId As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelEmpresa", empresaIdParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spInsDomicilioEmpresa(empresaId As Nullable(Of Integer), calle As String, numeroExterno As String, numeroInterno As String, entreCalles As String, colonia As String, cP As String, municipio As String, estadoId As Nullable(Of Integer), fiscalFlg As Nullable(Of Boolean), activoFlg As Nullable(Of Boolean), emisionFlg As Nullable(Of Boolean)) As ObjectResult(Of Nullable(Of Integer))
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim calleParameter As ObjectParameter = If(calle IsNot Nothing, New ObjectParameter("Calle", calle), New ObjectParameter("Calle", GetType(String)))

        Dim numeroExternoParameter As ObjectParameter = If(numeroExterno IsNot Nothing, New ObjectParameter("NumeroExterno", numeroExterno), New ObjectParameter("NumeroExterno", GetType(String)))

        Dim numeroInternoParameter As ObjectParameter = If(numeroInterno IsNot Nothing, New ObjectParameter("NumeroInterno", numeroInterno), New ObjectParameter("NumeroInterno", GetType(String)))

        Dim entreCallesParameter As ObjectParameter = If(entreCalles IsNot Nothing, New ObjectParameter("EntreCalles", entreCalles), New ObjectParameter("EntreCalles", GetType(String)))

        Dim coloniaParameter As ObjectParameter = If(colonia IsNot Nothing, New ObjectParameter("Colonia", colonia), New ObjectParameter("Colonia", GetType(String)))

        Dim cPParameter As ObjectParameter = If(cP IsNot Nothing, New ObjectParameter("CP", cP), New ObjectParameter("CP", GetType(String)))

        Dim municipioParameter As ObjectParameter = If(municipio IsNot Nothing, New ObjectParameter("Municipio", municipio), New ObjectParameter("Municipio", GetType(String)))

        Dim estadoIdParameter As ObjectParameter = If(estadoId.HasValue, New ObjectParameter("EstadoId", estadoId), New ObjectParameter("EstadoId", GetType(Integer)))

        Dim fiscalFlgParameter As ObjectParameter = If(fiscalFlg.HasValue, New ObjectParameter("FiscalFlg", fiscalFlg), New ObjectParameter("FiscalFlg", GetType(Boolean)))

        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Dim emisionFlgParameter As ObjectParameter = If(emisionFlg.HasValue, New ObjectParameter("EmisionFlg", emisionFlg), New ObjectParameter("EmisionFlg", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spInsDomicilioEmpresa", empresaIdParameter, calleParameter, numeroExternoParameter, numeroInternoParameter, entreCallesParameter, coloniaParameter, cPParameter, municipioParameter, estadoIdParameter, fiscalFlgParameter, activoFlgParameter, emisionFlgParameter)
    End Function

    Public Overridable Function spInsEmpresa(nombreEmpresa As String, rFC As String, regimenFiscalId As String, activoFlg As Nullable(Of Boolean), defaultFlg As Nullable(Of Boolean), cURP As String, organizacionId As Nullable(Of Integer), usuarioId As String) As ObjectResult(Of ResponseInsert)
        Dim nombreEmpresaParameter As ObjectParameter = If(nombreEmpresa IsNot Nothing, New ObjectParameter("NombreEmpresa", nombreEmpresa), New ObjectParameter("NombreEmpresa", GetType(String)))

        Dim rFCParameter As ObjectParameter = If(rFC IsNot Nothing, New ObjectParameter("RFC", rFC), New ObjectParameter("RFC", GetType(String)))

        Dim regimenFiscalIdParameter As ObjectParameter = If(regimenFiscalId IsNot Nothing, New ObjectParameter("RegimenFiscalId", regimenFiscalId), New ObjectParameter("RegimenFiscalId", GetType(String)))

        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Dim defaultFlgParameter As ObjectParameter = If(defaultFlg.HasValue, New ObjectParameter("DefaultFlg", defaultFlg), New ObjectParameter("DefaultFlg", GetType(Boolean)))

        Dim cURPParameter As ObjectParameter = If(cURP IsNot Nothing, New ObjectParameter("CURP", cURP), New ObjectParameter("CURP", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of ResponseInsert)("spInsEmpresa", nombreEmpresaParameter, rFCParameter, regimenFiscalIdParameter, activoFlgParameter, defaultFlgParameter, cURPParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spInsOrganizacion(nombreOrganizacion As String, usuarioId As String) As ObjectResult(Of ResponseInsert)
        Dim nombreOrganizacionParameter As ObjectParameter = If(nombreOrganizacion IsNot Nothing, New ObjectParameter("NombreOrganizacion", nombreOrganizacion), New ObjectParameter("NombreOrganizacion", GetType(String)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of ResponseInsert)("spInsOrganizacion", nombreOrganizacionParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spSELEstados(paisID As Nullable(Of Integer)) As ObjectResult(Of spSELEstados_Result)
        Dim paisIDParameter As ObjectParameter = If(paisID.HasValue, New ObjectParameter("PaisID", paisID), New ObjectParameter("PaisID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spSELEstados_Result)("spSELEstados", paisIDParameter)
    End Function

    Public Overridable Function spSELPaises() As ObjectResult(Of spSELPaises_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spSELPaises_Result)("spSELPaises")
    End Function

    Public Overridable Function spUpdActivoFlgEmpresa_EmpresaId(empresaId As Nullable(Of Integer), activoFlg As Nullable(Of Boolean), organizacionId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdActivoFlgEmpresa_EmpresaId", empresaIdParameter, activoFlgParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spUpdEmpresa(empresaId As Nullable(Of Integer), nombreEmpresa As String, rFC As String, regimenFiscalId As String, activoFlg As Nullable(Of Boolean), defaultFlg As Nullable(Of Boolean), cURP As String, organizacionId As Nullable(Of Integer), usuarioId As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim nombreEmpresaParameter As ObjectParameter = If(nombreEmpresa IsNot Nothing, New ObjectParameter("NombreEmpresa", nombreEmpresa), New ObjectParameter("NombreEmpresa", GetType(String)))

        Dim rFCParameter As ObjectParameter = If(rFC IsNot Nothing, New ObjectParameter("RFC", rFC), New ObjectParameter("RFC", GetType(String)))

        Dim regimenFiscalIdParameter As ObjectParameter = If(regimenFiscalId IsNot Nothing, New ObjectParameter("RegimenFiscalId", regimenFiscalId), New ObjectParameter("RegimenFiscalId", GetType(String)))

        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Dim defaultFlgParameter As ObjectParameter = If(defaultFlg.HasValue, New ObjectParameter("DefaultFlg", defaultFlg), New ObjectParameter("DefaultFlg", GetType(Boolean)))

        Dim cURPParameter As ObjectParameter = If(cURP IsNot Nothing, New ObjectParameter("CURP", cURP), New ObjectParameter("CURP", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdEmpresa", empresaIdParameter, nombreEmpresaParameter, rFCParameter, regimenFiscalIdParameter, activoFlgParameter, defaultFlgParameter, cURPParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spValidaComprobantesEmitidosporEmpresa(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spValidaComprobantesEmitidosporEmpresa", empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spUpdOrganizacion(organizacionId As Nullable(Of Integer), usuarioId As String, nombreOrganizacion As String, activoFlg As Nullable(Of Boolean)) As Integer
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Dim nombreOrganizacionParameter As ObjectParameter = If(nombreOrganizacion IsNot Nothing, New ObjectParameter("NombreOrganizacion", nombreOrganizacion), New ObjectParameter("NombreOrganizacion", GetType(String)))

        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdOrganizacion", organizacionIdParameter, usuarioIdParameter, nombreOrganizacionParameter, activoFlgParameter)
    End Function

    Public Overridable Function getOrganizacion(usuarioId As String) As ObjectResult(Of spConsOrganizacion_Result)
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsOrganizacion_Result)("getOrganizacion", usuarioIdParameter)
    End Function

    Public Overridable Function spUpdDomicilioEmpresa(empresaId As Nullable(Of Integer), domicilioId As Nullable(Of Integer), calle As String, numeroExterno As String, numeroInterno As String, entreCalles As String, colonia As String, cP As String, municipio As String, estadoId As Nullable(Of Integer), fiscalFlg As Nullable(Of Boolean), activoFlg As Nullable(Of Boolean), emisionFlg As Nullable(Of Boolean)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim domicilioIdParameter As ObjectParameter = If(domicilioId.HasValue, New ObjectParameter("DomicilioId", domicilioId), New ObjectParameter("DomicilioId", GetType(Integer)))

        Dim calleParameter As ObjectParameter = If(calle IsNot Nothing, New ObjectParameter("Calle", calle), New ObjectParameter("Calle", GetType(String)))

        Dim numeroExternoParameter As ObjectParameter = If(numeroExterno IsNot Nothing, New ObjectParameter("NumeroExterno", numeroExterno), New ObjectParameter("NumeroExterno", GetType(String)))

        Dim numeroInternoParameter As ObjectParameter = If(numeroInterno IsNot Nothing, New ObjectParameter("NumeroInterno", numeroInterno), New ObjectParameter("NumeroInterno", GetType(String)))

        Dim entreCallesParameter As ObjectParameter = If(entreCalles IsNot Nothing, New ObjectParameter("EntreCalles", entreCalles), New ObjectParameter("EntreCalles", GetType(String)))

        Dim coloniaParameter As ObjectParameter = If(colonia IsNot Nothing, New ObjectParameter("Colonia", colonia), New ObjectParameter("Colonia", GetType(String)))

        Dim cPParameter As ObjectParameter = If(cP IsNot Nothing, New ObjectParameter("CP", cP), New ObjectParameter("CP", GetType(String)))

        Dim municipioParameter As ObjectParameter = If(municipio IsNot Nothing, New ObjectParameter("Municipio", municipio), New ObjectParameter("Municipio", GetType(String)))

        Dim estadoIdParameter As ObjectParameter = If(estadoId.HasValue, New ObjectParameter("EstadoId", estadoId), New ObjectParameter("EstadoId", GetType(Integer)))

        Dim fiscalFlgParameter As ObjectParameter = If(fiscalFlg.HasValue, New ObjectParameter("FiscalFlg", fiscalFlg), New ObjectParameter("FiscalFlg", GetType(Boolean)))

        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Dim emisionFlgParameter As ObjectParameter = If(emisionFlg.HasValue, New ObjectParameter("EmisionFlg", emisionFlg), New ObjectParameter("EmisionFlg", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdDomicilioEmpresa", empresaIdParameter, domicilioIdParameter, calleParameter, numeroExternoParameter, numeroInternoParameter, entreCallesParameter, coloniaParameter, cPParameter, municipioParameter, estadoIdParameter, fiscalFlgParameter, activoFlgParameter, emisionFlgParameter)
    End Function

    Public Overridable Function spALLActualiza_EstatusPago_Viejos() As ObjectResult(Of spALLActualiza_EstatusPago_Viejos_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spALLActualiza_EstatusPago_Viejos_Result)("spALLActualiza_EstatusPago_Viejos")
    End Function

    Public Overridable Function spAllArticulo() As ObjectResult(Of spAllArticulo_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllArticulo_Result)("spAllArticulo")
    End Function

    Public Overridable Function spAllBanco() As ObjectResult(Of spAllBanco_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllBanco_Result)("spAllBanco")
    End Function

    Public Overridable Function spALLCategoriaArticulo() As ObjectResult(Of spALLCategoriaArticulo_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spALLCategoriaArticulo_Result)("spALLCategoriaArticulo")
    End Function

    Public Overridable Function spAllCertificadoEmpresa() As ObjectResult(Of spAllCertificadoEmpresa_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllCertificadoEmpresa_Result)("spAllCertificadoEmpresa")
    End Function

    Public Overridable Function spAllEmpleado() As ObjectResult(Of spAllEmpleado_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllEmpleado_Result)("spAllEmpleado")
    End Function

    Public Overridable Function spAllEmpresa_UsuarioId(usuarioId As String) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAllEmpresa_UsuarioId", usuarioIdParameter)
    End Function

    Public Overridable Function spAllEntidadFederativa() As ObjectResult(Of spAllEntidadFederativa_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllEntidadFederativa_Result)("spAllEntidadFederativa")
    End Function

    Public Overridable Function spAllEsquemaFiscal() As ObjectResult(Of String)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spAllEsquemaFiscal")
    End Function

    Public Overridable Function spAllMoneda() As ObjectResult(Of spAllMoneda_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllMoneda_Result)("spAllMoneda")
    End Function

    Public Overridable Function spALLPerfil() As ObjectResult(Of spALLPerfil_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spALLPerfil_Result)("spALLPerfil")
    End Function

    Public Overridable Function spAllRiesgoPuesto() As ObjectResult(Of spAllRiesgoPuesto_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllRiesgoPuesto_Result)("spAllRiesgoPuesto")
    End Function

    Public Overridable Function spAllSerieFolio_TodosComprobantes() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spAllSerieFolio_TodosComprobantes")
    End Function

    Public Overridable Function spAllSubCategoriaArticulo() As ObjectResult(Of spAllSubCategoriaArticulo_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllSubCategoriaArticulo_Result)("spAllSubCategoriaArticulo")
    End Function

    Public Overridable Function spAllTasaIVA(activoFlg As Nullable(Of Boolean)) As ObjectResult(Of spAllTasaIVA_Result)
        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTasaIVA_Result)("spAllTasaIVA", activoFlgParameter)
    End Function

    Public Overridable Function spAllTipoComprobante() As ObjectResult(Of spAllTipoComprobante_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoComprobante_Result)("spAllTipoComprobante")
    End Function

    Public Overridable Function spAllTipoComprobante_CBB() As ObjectResult(Of spAllTipoComprobante_CBB_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoComprobante_CBB_Result)("spAllTipoComprobante_CBB")
    End Function

    Public Overridable Function spAllTipoComprobante_CFDI() As ObjectResult(Of spAllTipoComprobante_CFDI_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoComprobante_CFDI_Result)("spAllTipoComprobante_CFDI")
    End Function

    Public Overridable Function spAllTipoComprobante_EsquemaFiscal(esquemaFiscal As String) As ObjectResult(Of spAllTipoComprobante_EsquemaFiscal_Result)
        Dim esquemaFiscalParameter As ObjectParameter = If(esquemaFiscal IsNot Nothing, New ObjectParameter("EsquemaFiscal", esquemaFiscal), New ObjectParameter("EsquemaFiscal", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoComprobante_EsquemaFiscal_Result)("spAllTipoComprobante_EsquemaFiscal", esquemaFiscalParameter)
    End Function

    Public Overridable Function spAllTipoContrato() As ObjectResult(Of spAllTipoContrato_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoContrato_Result)("spAllTipoContrato")
    End Function

    Public Overridable Function spAllTipoDeduccion() As ObjectResult(Of spAllTipoDeduccion_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoDeduccion_Result)("spAllTipoDeduccion")
    End Function

    Public Overridable Function spAllTipoIncapacidad() As ObjectResult(Of spAllTipoIncapacidad_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoIncapacidad_Result)("spAllTipoIncapacidad")
    End Function

    Public Overridable Function spAllTipoInformacionAdicional() As ObjectResult(Of spAllTipoInformacionAdicional_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoInformacionAdicional_Result)("spAllTipoInformacionAdicional")
    End Function

    Public Overridable Function spAllTipoJornada() As ObjectResult(Of spAllTipoJornada_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoJornada_Result)("spAllTipoJornada")
    End Function

    Public Overridable Function spAllTipoOtroPago() As ObjectResult(Of spAllTipoOtroPago_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoOtroPago_Result)("spAllTipoOtroPago")
    End Function

    Public Overridable Function spAllTipoPercepcion() As ObjectResult(Of spAllTipoPercepcion_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoPercepcion_Result)("spAllTipoPercepcion")
    End Function

    Public Overridable Function spAllTipoPeriocidadPago() As ObjectResult(Of spAllTipoPeriocidadPago_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoPeriocidadPago_Result)("spAllTipoPeriocidadPago")
    End Function

    Public Overridable Function spAllTipoRegimenEmpleado() As ObjectResult(Of spAllTipoRegimenEmpleado_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllTipoRegimenEmpleado_Result)("spAllTipoRegimenEmpleado")
    End Function

    Public Overridable Function spALLTipoUnidad() As ObjectResult(Of spALLTipoUnidad_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spALLTipoUnidad_Result)("spALLTipoUnidad")
    End Function

    Public Overridable Function spALLubCategoriaArticulo() As ObjectResult(Of spALLubCategoriaArticulo_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spALLubCategoriaArticulo_Result)("spALLubCategoriaArticulo")
    End Function

    Public Overridable Function spAllUnidades() As ObjectResult(Of spAllUnidades_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllUnidades_Result)("spAllUnidades")
    End Function

    Public Overridable Function spALLUsuario() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spALLUsuario")
    End Function

    Public Overridable Function spConEmpresa_String(empresaID As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConEmpresa_String", empresaIDParameter)
    End Function

    Public Overridable Function spConImpuestos_Default_Empresa(empresaID As Nullable(Of Integer), tipoComprobanteID As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("empresaID", empresaID), New ObjectParameter("empresaID", GetType(Integer)))

        Dim tipoComprobanteIDParameter As ObjectParameter = If(tipoComprobanteID.HasValue, New ObjectParameter("TipoComprobanteID", tipoComprobanteID), New ObjectParameter("TipoComprobanteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spConImpuestos_Default_Empresa", empresaIDParameter, tipoComprobanteIDParameter)
    End Function

    Public Overridable Function spCONS_FolioSerie_CFDI(empresaID As Nullable(Of Integer)) As ObjectResult(Of spCONS_FolioSerie_CFDI_Result)
        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCONS_FolioSerie_CFDI_Result)("spCONS_FolioSerie_CFDI", empresaIDParameter)
    End Function

    Public Overridable Function spConsAddendaComprobante(comprobanteId As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim comprobanteIdParameter As ObjectParameter = If(comprobanteId.HasValue, New ObjectParameter("ComprobanteId", comprobanteId), New ObjectParameter("ComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsAddendaComprobante", comprobanteIdParameter)
    End Function

    Public Overridable Function spConsAñosComprobantes_EmpresaId(empresaId As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spConsAñosComprobantes_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spConsArticulo_NombreArticulo_SubCategoria_Categoria(nombreArticulo As String, subCategoriaArticuloId As Nullable(Of Integer), categoriaId As Nullable(Of Integer)) As ObjectResult(Of spConsArticulo_NombreArticulo_SubCategoria_Categoria_Result)
        Dim nombreArticuloParameter As ObjectParameter = If(nombreArticulo IsNot Nothing, New ObjectParameter("NombreArticulo", nombreArticulo), New ObjectParameter("NombreArticulo", GetType(String)))

        Dim subCategoriaArticuloIdParameter As ObjectParameter = If(subCategoriaArticuloId.HasValue, New ObjectParameter("SubCategoriaArticuloId", subCategoriaArticuloId), New ObjectParameter("SubCategoriaArticuloId", GetType(Integer)))

        Dim categoriaIdParameter As ObjectParameter = If(categoriaId.HasValue, New ObjectParameter("CategoriaId", categoriaId), New ObjectParameter("CategoriaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsArticulo_NombreArticulo_SubCategoria_Categoria_Result)("spConsArticulo_NombreArticulo_SubCategoria_Categoria", nombreArticuloParameter, subCategoriaArticuloIdParameter, categoriaIdParameter)
    End Function

    Public Overridable Function spConsCertificadoEmpresa_EmpresaId(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), usuarioId As String) As ObjectResult(Of spConsCertificadoEmpresa_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsCertificadoEmpresa_EmpresaId_Result)("spConsCertificadoEmpresa_EmpresaId", empresaIdParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spConsClienteCuentaContable(clienteID As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim clienteIDParameter As ObjectParameter = If(clienteID.HasValue, New ObjectParameter("ClienteID", clienteID), New ObjectParameter("ClienteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsClienteCuentaContable", clienteIDParameter)
    End Function

    Public Overridable Function spConsClienteMetodoPago(pIClienteID As Nullable(Of Integer)) As ObjectResult(Of spConsClienteMetodoPago_Result)
        Dim pIClienteIDParameter As ObjectParameter = If(pIClienteID.HasValue, New ObjectParameter("PIClienteID", pIClienteID), New ObjectParameter("PIClienteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsClienteMetodoPago_Result)("spConsClienteMetodoPago", pIClienteIDParameter)
    End Function

    Public Overridable Function spConsClienteNumCtaPago(pIClienteID As Nullable(Of Integer)) As ObjectResult(Of spConsClienteNumCtaPago_Result)
        Dim pIClienteIDParameter As ObjectParameter = If(pIClienteID.HasValue, New ObjectParameter("PIClienteID", pIClienteID), New ObjectParameter("PIClienteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsClienteNumCtaPago_Result)("spConsClienteNumCtaPago", pIClienteIDParameter)
    End Function

    Public Overridable Function spConsClientesMayorVolumen(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), cantidadClientes As Nullable(Of Integer), añoActual As Nullable(Of Integer), mesActual As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim cantidadClientesParameter As ObjectParameter = If(cantidadClientes.HasValue, New ObjectParameter("CantidadClientes", cantidadClientes), New ObjectParameter("CantidadClientes", GetType(Integer)))

        Dim añoActualParameter As ObjectParameter = If(añoActual.HasValue, New ObjectParameter("AñoActual", añoActual), New ObjectParameter("AñoActual", GetType(Integer)))

        Dim mesActualParameter As ObjectParameter = If(mesActual.HasValue, New ObjectParameter("MesActual", mesActual), New ObjectParameter("MesActual", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsClientesMayorVolumen", empresaIdParameter, tipoComprobanteIdParameter, cantidadClientesParameter, añoActualParameter, mesActualParameter)
    End Function

    Public Overridable Function spConsCobranzaporCliente(empresaId As Nullable(Of Integer), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsCobranzaporCliente", empresaIdParameter, fechaIniFacturaParameter, fechaFinFacturaParameter)
    End Function

    Public Overridable Function spConsComprobante_TipoComprobante_FechaFactura_Poliza(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date)) As ObjectResult(Of spConsComprobante_TipoComprobante_FechaFactura_Poliza_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsComprobante_TipoComprobante_FechaFactura_Poliza_Result)("spConsComprobante_TipoComprobante_FechaFactura_Poliza", empresaIdParameter, tipoComprobanteIdParameter, fechaIniFacturaParameter, fechaFinFacturaParameter)
    End Function

    Public Overridable Function spConsComprobante_TipoComprobante_Serie_Folio_FechaFactura(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date), cliente As String, usuarioID As Nullable(Of Integer), tipoLicencia As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim tipoLicenciaParameter As ObjectParameter = If(tipoLicencia.HasValue, New ObjectParameter("TipoLicencia", tipoLicencia), New ObjectParameter("TipoLicencia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsComprobante_TipoComprobante_Serie_Folio_FechaFactura", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter, fechaIniFacturaParameter, fechaFinFacturaParameter, clienteParameter, usuarioIDParameter, tipoLicenciaParameter)
    End Function

    Public Overridable Function spConsComprobante_TipoComprobante_Serie_Folio_FechaFactura_PORTAL(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date), cliente As String, cuentaContable As String) As ObjectResult(Of spConsComprobante_TipoComprobante_Serie_Folio_FechaFactura_PORTAL_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim cuentaContableParameter As ObjectParameter = If(cuentaContable IsNot Nothing, New ObjectParameter("CuentaContable", cuentaContable), New ObjectParameter("CuentaContable", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsComprobante_TipoComprobante_Serie_Folio_FechaFactura_PORTAL_Result)("spConsComprobante_TipoComprobante_Serie_Folio_FechaFactura_PORTAL", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter, fechaIniFacturaParameter, fechaFinFacturaParameter, clienteParameter, cuentaContableParameter)
    End Function

    Public Overridable Function sp_REPImpuestosComprobante(comprobanteID As Nullable(Of Integer)) As ObjectResult(Of sp_REPImpuestosComprobante_Result)
        Dim comprobanteIDParameter As ObjectParameter = If(comprobanteID.HasValue, New ObjectParameter("ComprobanteID", comprobanteID), New ObjectParameter("ComprobanteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sp_REPImpuestosComprobante_Result)("sp_REPImpuestosComprobante", comprobanteIDParameter)
    End Function

    Public Overridable Function spCONSComprobanteID_Carga_Excel(folio As Nullable(Of Integer), empresaID As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("folio", folio), New ObjectParameter("folio", GetType(Integer)))

        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spCONSComprobanteID_Carga_Excel", folioParameter, empresaIDParameter)
    End Function

    Public Overridable Function spConsComprobanteNomina(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date), cliente As String, usuarioID As Nullable(Of Integer), tipoLicencia As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim tipoLicenciaParameter As ObjectParameter = If(tipoLicencia.HasValue, New ObjectParameter("TipoLicencia", tipoLicencia), New ObjectParameter("TipoLicencia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsComprobanteNomina", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter, fechaIniFacturaParameter, fechaFinFacturaParameter, clienteParameter, usuarioIDParameter, tipoLicenciaParameter)
    End Function

    Public Overridable Function spConsComprobanteporCliente(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date), usuarioID As Nullable(Of Integer), tipoLicencia As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim tipoLicenciaParameter As ObjectParameter = If(tipoLicencia.HasValue, New ObjectParameter("TipoLicencia", tipoLicencia), New ObjectParameter("TipoLicencia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsComprobanteporCliente", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter, fechaIniFacturaParameter, fechaFinFacturaParameter, usuarioIDParameter, tipoLicenciaParameter)
    End Function

    Public Overridable Function spConsComprobanteporClienteDetalle(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date), usuarioID As Nullable(Of Integer), tipoLicencia As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim tipoLicenciaParameter As ObjectParameter = If(tipoLicencia.HasValue, New ObjectParameter("TipoLicencia", tipoLicencia), New ObjectParameter("TipoLicencia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsComprobanteporClienteDetalle", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter, fechaIniFacturaParameter, fechaFinFacturaParameter, usuarioIDParameter, tipoLicenciaParameter)
    End Function

    Public Overridable Function spConsComprobantes_EmpresaId(empresaId As Nullable(Of Integer), mes As Nullable(Of Integer), año As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim mesParameter As ObjectParameter = If(mes.HasValue, New ObjectParameter("Mes", mes), New ObjectParameter("Mes", GetType(Integer)))

        Dim añoParameter As ObjectParameter = If(año.HasValue, New ObjectParameter("Año", año), New ObjectParameter("Año", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsComprobantes_EmpresaId", empresaIdParameter, mesParameter, añoParameter)
    End Function

    Public Overridable Function spConsComprobantesEmitidosMasRecientes(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), cantidadComprobantes As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim cantidadComprobantesParameter As ObjectParameter = If(cantidadComprobantes.HasValue, New ObjectParameter("CantidadComprobantes", cantidadComprobantes), New ObjectParameter("CantidadComprobantes", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsComprobantesEmitidosMasRecientes", empresaIdParameter, tipoComprobanteIdParameter, cantidadComprobantesParameter)
    End Function

    Public Overridable Function spConsComprobantesIngresosTotales(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsComprobantesIngresosTotales", empresaIdParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsCompronateporMes(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), añoActual As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim añoActualParameter As ObjectParameter = If(añoActual.HasValue, New ObjectParameter("AñoActual", añoActual), New ObjectParameter("AñoActual", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsCompronateporMes", empresaIdParameter, tipoComprobanteIdParameter, añoActualParameter)
    End Function

    Public Overridable Function spConsComproSerieFolioTipoComp_CBB(empresaId As Nullable(Of Integer), serie As String, tipoComprobanteId As Nullable(Of Integer), folioInicial As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim folioInicialParameter As ObjectParameter = If(folioInicial.HasValue, New ObjectParameter("FolioInicial", folioInicial), New ObjectParameter("FolioInicial", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spConsComproSerieFolioTipoComp_CBB", empresaIdParameter, serieParameter, tipoComprobanteIdParameter, folioInicialParameter)
    End Function

    Public Overridable Function spConsComproSerieFolioTipoComp_CFDI(empresaId As Nullable(Of Integer), serie As String, tipoComprobanteId As Nullable(Of Integer), folioInicial As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim folioInicialParameter As ObjectParameter = If(folioInicial.HasValue, New ObjectParameter("FolioInicial", folioInicial), New ObjectParameter("FolioInicial", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spConsComproSerieFolioTipoComp_CFDI", empresaIdParameter, serieParameter, tipoComprobanteIdParameter, folioInicialParameter)
    End Function

    Public Overridable Function spConsConceptoComprobante_ComprobanteId(comprobanteId As Nullable(Of Integer)) As ObjectResult(Of spConsConceptoComprobante_ComprobanteId_Result)
        Dim comprobanteIdParameter As ObjectParameter = If(comprobanteId.HasValue, New ObjectParameter("ComprobanteId", comprobanteId), New ObjectParameter("ComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsConceptoComprobante_ComprobanteId_Result)("spConsConceptoComprobante_ComprobanteId", comprobanteIdParameter)
    End Function

    Public Overridable Function spConsConceptoComprobante_Notacredito(folioId As Nullable(Of Integer), serie As String, empresaID As Nullable(Of Integer), tipoComprobanteID As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim folioIdParameter As ObjectParameter = If(folioId.HasValue, New ObjectParameter("FolioId", folioId), New ObjectParameter("FolioId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Dim tipoComprobanteIDParameter As ObjectParameter = If(tipoComprobanteID.HasValue, New ObjectParameter("TipoComprobanteID", tipoComprobanteID), New ObjectParameter("TipoComprobanteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spConsConceptoComprobante_Notacredito", folioIdParameter, serieParameter, empresaIDParameter, tipoComprobanteIDParameter)
    End Function

    Public Overridable Function spConsConceptoInformacionAduana(comprobanteId As Nullable(Of Integer)) As ObjectResult(Of spConsConceptoInformacionAduana_Result)
        Dim comprobanteIdParameter As ObjectParameter = If(comprobanteId.HasValue, New ObjectParameter("ComprobanteId", comprobanteId), New ObjectParameter("ComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsConceptoInformacionAduana_Result)("spConsConceptoInformacionAduana", comprobanteIdParameter)
    End Function

    Public Overridable Function spConsConceptosMasUtilizados(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), cantidadConceptos As Nullable(Of Integer), añoActual As Nullable(Of Integer), mesActual As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim cantidadConceptosParameter As ObjectParameter = If(cantidadConceptos.HasValue, New ObjectParameter("CantidadConceptos", cantidadConceptos), New ObjectParameter("CantidadConceptos", GetType(Integer)))

        Dim añoActualParameter As ObjectParameter = If(añoActual.HasValue, New ObjectParameter("AñoActual", añoActual), New ObjectParameter("AñoActual", GetType(Integer)))

        Dim mesActualParameter As ObjectParameter = If(mesActual.HasValue, New ObjectParameter("MesActual", mesActual), New ObjectParameter("MesActual", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsConceptosMasUtilizados", empresaIdParameter, tipoComprobanteIdParameter, cantidadConceptosParameter, añoActualParameter, mesActualParameter)
    End Function

    Public Overridable Function spConsConfiguracionCorreo_EmpresaId(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As ObjectResult(Of spConsConfiguracionCorreo_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsConfiguracionCorreo_EmpresaId_Result)("spConsConfiguracionCorreo_EmpresaId", empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spConsConfiguracionEmpresa_EmpresaId(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), usuarioId As String) As ObjectResult(Of spConsConfiguracionEmpresa_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsConfiguracionEmpresa_EmpresaId_Result)("spConsConfiguracionEmpresa_EmpresaId", empresaIdParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spConsConfiguracionEmpresaCorreo_EmpresaId(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As ObjectResult(Of spConsConfiguracionEmpresaCorreo_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsConfiguracionEmpresaCorreo_EmpresaId_Result)("spConsConfiguracionEmpresaCorreo_EmpresaId", empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spConsConfiguracionImpuesto(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As ObjectResult(Of spConsConfiguracionImpuesto_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsConfiguracionImpuesto_Result)("spConsConfiguracionImpuesto", empresaIdParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsContactoEmpresa_EmpresaId(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As ObjectResult(Of spConsContactoEmpresa_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsContactoEmpresa_EmpresaId_Result)("spConsContactoEmpresa_EmpresaId", empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spConsCorreoClienteComprobante(dias As Nullable(Of Integer)) As ObjectResult(Of spConsCorreoClienteComprobante_Result)
        Dim diasParameter As ObjectParameter = If(dias.HasValue, New ObjectParameter("Dias", dias), New ObjectParameter("Dias", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsCorreoClienteComprobante_Result)("spConsCorreoClienteComprobante", diasParameter)
    End Function

    Public Overridable Function spConsCorreoElectronicoCliente_ClienteId(clienteId As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsCorreoElectronicoCliente_ClienteId", clienteIdParameter)
    End Function

    Public Overridable Function spConsDatos_Poliza(comprobanteID As Nullable(Of Integer)) As ObjectResult(Of spConsDatos_Poliza_Result)
        Dim comprobanteIDParameter As ObjectParameter = If(comprobanteID.HasValue, New ObjectParameter("ComprobanteID", comprobanteID), New ObjectParameter("ComprobanteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsDatos_Poliza_Result)("spConsDatos_Poliza", comprobanteIDParameter)
    End Function

    Public Overridable Function spConsDatos_Poliza_Movimiento(comprobanteID As Nullable(Of Integer)) As ObjectResult(Of spConsDatos_Poliza_Movimiento_Result)
        Dim comprobanteIDParameter As ObjectParameter = If(comprobanteID.HasValue, New ObjectParameter("ComprobanteID", comprobanteID), New ObjectParameter("ComprobanteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsDatos_Poliza_Movimiento_Result)("spConsDatos_Poliza_Movimiento", comprobanteIDParameter)
    End Function

    Public Overridable Function spConsDomicilioEmpresa_EmpresaId(empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsDomicilioEmpresa_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsDomicilioEmpresa_EmpresaId_Result)("spConsDomicilioEmpresa_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spConsDominioInformacionAdicional(tipoInformacionId As Nullable(Of Integer)) As ObjectResult(Of spConsDominioInformacionAdicional_Result)
        Dim tipoInformacionIdParameter As ObjectParameter = If(tipoInformacionId.HasValue, New ObjectParameter("TipoInformacionId", tipoInformacionId), New ObjectParameter("TipoInformacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsDominioInformacionAdicional_Result)("spConsDominioInformacionAdicional", tipoInformacionIdParameter)
    End Function

    Public Overridable Function spConsDominioInformacionAdicional_DominioInformacionId(tipoInformacionId As Nullable(Of Integer), dominioInformacionId As Nullable(Of Integer)) As ObjectResult(Of spConsDominioInformacionAdicional_DominioInformacionId_Result)
        Dim tipoInformacionIdParameter As ObjectParameter = If(tipoInformacionId.HasValue, New ObjectParameter("TipoInformacionId", tipoInformacionId), New ObjectParameter("TipoInformacionId", GetType(Integer)))

        Dim dominioInformacionIdParameter As ObjectParameter = If(dominioInformacionId.HasValue, New ObjectParameter("DominioInformacionId", dominioInformacionId), New ObjectParameter("DominioInformacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsDominioInformacionAdicional_DominioInformacionId_Result)("spConsDominioInformacionAdicional_DominioInformacionId", tipoInformacionIdParameter, dominioInformacionIdParameter)
    End Function

    Public Overridable Function spConsEmpleadoMetodoPago(pIEmpleadoID As Nullable(Of Integer)) As ObjectResult(Of spConsEmpleadoMetodoPago_Result)
        Dim pIEmpleadoIDParameter As ObjectParameter = If(pIEmpleadoID.HasValue, New ObjectParameter("PIEmpleadoID", pIEmpleadoID), New ObjectParameter("PIEmpleadoID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsEmpleadoMetodoPago_Result)("spConsEmpleadoMetodoPago", pIEmpleadoIDParameter)
    End Function

    Public Overridable Function spConsEmpleadoNomina(noEnviados As String) As Integer
        Dim noEnviadosParameter As ObjectParameter = If(noEnviados IsNot Nothing, New ObjectParameter("NoEnviados", noEnviados), New ObjectParameter("NoEnviados", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsEmpleadoNomina", noEnviadosParameter)
    End Function

    Public Overridable Function spConsEmpleadoNominaPercDeducc(noEnviados As String) As Integer
        Dim noEnviadosParameter As ObjectParameter = If(noEnviados IsNot Nothing, New ObjectParameter("NoEnviados", noEnviados), New ObjectParameter("NoEnviados", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsEmpleadoNominaPercDeducc", noEnviadosParameter)
    End Function

    Public Overridable Function spConsEmpleadoNumCtaPago(pIEmpleadoID As Nullable(Of Integer)) As ObjectResult(Of spConsEmpleadoNumCtaPago_Result)
        Dim pIEmpleadoIDParameter As ObjectParameter = If(pIEmpleadoID.HasValue, New ObjectParameter("PIEmpleadoID", pIEmpleadoID), New ObjectParameter("PIEmpleadoID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsEmpleadoNumCtaPago_Result)("spConsEmpleadoNumCtaPago", pIEmpleadoIDParameter)
    End Function

    Public Overridable Function spConsEmpresaTipoInformacionAdicional(empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsEmpresaTipoInformacionAdicional_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsEmpresaTipoInformacionAdicional_Result)("spConsEmpresaTipoInformacionAdicional", empresaIdParameter)
    End Function

    Public Overridable Function spConsEstatusPagoComprobante(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date), cliente As String) As ObjectResult(Of spConsEstatusPagoComprobante_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsEstatusPagoComprobante_Result)("spConsEstatusPagoComprobante", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter, fechaIniFacturaParameter, fechaFinFacturaParameter, clienteParameter)
    End Function

    Public Overridable Function spConsExisteComprobante_Serie_Folio(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal)) As ObjectResult(Of Nullable(Of Integer))
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spConsExisteComprobante_Serie_Folio", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter)
    End Function

    Public Overridable Function spCONSFactura_Version() As ObjectResult(Of spCONSFactura_Version_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCONSFactura_Version_Result)("spCONSFactura_Version")
    End Function

    Public Overridable Function spConsFechaEmision_ComprobanteId(comprobanteId As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Date))
        Dim comprobanteIdParameter As ObjectParameter = If(comprobanteId.HasValue, New ObjectParameter("ComprobanteId", comprobanteId), New ObjectParameter("ComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Date))("spConsFechaEmision_ComprobanteId", comprobanteIdParameter)
    End Function

    Public Overridable Function spConsFoliosDisponibles(empresaId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsFoliosDisponibles", empresaIdParameter)
    End Function

    Public Overridable Function spConsFoliosDisponibles_EmpresaId_Serie(empresaId As Nullable(Of Integer), serie As String, sistema As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim sistemaParameter As ObjectParameter = If(sistema IsNot Nothing, New ObjectParameter("Sistema", sistema), New ObjectParameter("Sistema", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsFoliosDisponibles_EmpresaId_Serie", empresaIdParameter, serieParameter, sistemaParameter)
    End Function

    Public Overridable Function spConsFoliosDisponibles_EmpresaId_Serie_CBB(empresaId As Nullable(Of Integer), serie As String, sistema As String, tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim sistemaParameter As ObjectParameter = If(sistema IsNot Nothing, New ObjectParameter("Sistema", sistema), New ObjectParameter("Sistema", GetType(String)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsFoliosDisponibles_EmpresaId_Serie_CBB", empresaIdParameter, serieParameter, sistemaParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsFoliosDisponibles_EmpresaId_Serie_CFDI(empresaId As Nullable(Of Integer), serie As String, sistema As String, tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim sistemaParameter As ObjectParameter = If(sistema IsNot Nothing, New ObjectParameter("Sistema", sistema), New ObjectParameter("Sistema", GetType(String)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsFoliosDisponibles_EmpresaId_Serie_CFDI", empresaIdParameter, serieParameter, sistemaParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsImpuestosEmpresa(empresaID As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As ObjectResult(Of spConsImpuestosEmpresa_Result)
        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsImpuestosEmpresa_Result)("spConsImpuestosEmpresa", empresaIDParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsIVA(pITasa As Nullable(Of Decimal)) As ObjectResult(Of Nullable(Of Integer))
        Dim pITasaParameter As ObjectParameter = If(pITasa.HasValue, New ObjectParameter("PITasa", pITasa), New ObjectParameter("PITasa", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spConsIVA", pITasaParameter)
    End Function

    Public Overridable Function spConsLicenciaActiva_EmpresaId(empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsLicenciaActiva_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsLicenciaActiva_EmpresaId_Result)("spConsLicenciaActiva_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spCONSMaxComprobante_Usuario_Empresa(usuarioID As Nullable(Of Integer), empresaID As Nullable(Of Integer)) As ObjectResult(Of spCONSMaxComprobante_Usuario_Empresa_Result)
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCONSMaxComprobante_Usuario_Empresa_Result)("spCONSMaxComprobante_Usuario_Empresa", usuarioIDParameter, empresaIDParameter)
    End Function

    Public Overridable Function spConsMesesComprobantes_EmpresaId(empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsMesesComprobantes_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsMesesComprobantes_EmpresaId_Result)("spConsMesesComprobantes_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spConsMesesComprobantesEmitidos_EmpresaId_ReporteMensualSAT() As ObjectResult(Of spConsMesesComprobantesEmitidos_EmpresaId_ReporteMensualSAT_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsMesesComprobantesEmitidos_EmpresaId_ReporteMensualSAT_Result)("spConsMesesComprobantesEmitidos_EmpresaId_ReporteMensualSAT")
    End Function

    Public Overridable Function spConsNumeroAprobacion_SerieFolio(empresaId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal)) As ObjectResult(Of spConsNumeroAprobacion_SerieFolio_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsNumeroAprobacion_SerieFolio_Result)("spConsNumeroAprobacion_SerieFolio", empresaIdParameter, serieParameter, folioParameter)
    End Function

    Public Overridable Function spConsNumeroAprobacion_SerieFolio_CBB(empresaId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), tipoComprobanteId As Nullable(Of Integer)) As ObjectResult(Of spConsNumeroAprobacion_SerieFolio_CBB_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsNumeroAprobacion_SerieFolio_CBB_Result)("spConsNumeroAprobacion_SerieFolio_CBB", empresaIdParameter, serieParameter, folioParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spCONSPagosComprobante(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), serie As String, folio As Nullable(Of Integer), fechaIniFactura As Nullable(Of Date), fechaFinFactura As Nullable(Of Date), cliente As String, recepcionde As Nullable(Of Date), recepcionHasta As Nullable(Of Date), caja As String, orden As String, referencia As String, movimiento As String, otros As String, estatusVencimiento As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Integer)))

        Dim fechaIniFacturaParameter As ObjectParameter = If(fechaIniFactura.HasValue, New ObjectParameter("FechaIniFactura", fechaIniFactura), New ObjectParameter("FechaIniFactura", GetType(Date)))

        Dim fechaFinFacturaParameter As ObjectParameter = If(fechaFinFactura.HasValue, New ObjectParameter("FechaFinFactura", fechaFinFactura), New ObjectParameter("FechaFinFactura", GetType(Date)))

        Dim clienteParameter As ObjectParameter = If(cliente IsNot Nothing, New ObjectParameter("Cliente", cliente), New ObjectParameter("Cliente", GetType(String)))

        Dim recepciondeParameter As ObjectParameter = If(recepcionde.HasValue, New ObjectParameter("Recepcionde", recepcionde), New ObjectParameter("Recepcionde", GetType(Date)))

        Dim recepcionHastaParameter As ObjectParameter = If(recepcionHasta.HasValue, New ObjectParameter("RecepcionHasta", recepcionHasta), New ObjectParameter("RecepcionHasta", GetType(Date)))

        Dim cajaParameter As ObjectParameter = If(caja IsNot Nothing, New ObjectParameter("Caja", caja), New ObjectParameter("Caja", GetType(String)))

        Dim ordenParameter As ObjectParameter = If(orden IsNot Nothing, New ObjectParameter("Orden", orden), New ObjectParameter("Orden", GetType(String)))

        Dim referenciaParameter As ObjectParameter = If(referencia IsNot Nothing, New ObjectParameter("Referencia", referencia), New ObjectParameter("Referencia", GetType(String)))

        Dim movimientoParameter As ObjectParameter = If(movimiento IsNot Nothing, New ObjectParameter("Movimiento", movimiento), New ObjectParameter("Movimiento", GetType(String)))

        Dim otrosParameter As ObjectParameter = If(otros IsNot Nothing, New ObjectParameter("Otros", otros), New ObjectParameter("Otros", GetType(String)))

        Dim estatusVencimientoParameter As ObjectParameter = If(estatusVencimiento IsNot Nothing, New ObjectParameter("EstatusVencimiento", estatusVencimiento), New ObjectParameter("EstatusVencimiento", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCONSPagosComprobante", empresaIdParameter, tipoComprobanteIdParameter, serieParameter, folioParameter, fechaIniFacturaParameter, fechaFinFacturaParameter, clienteParameter, recepciondeParameter, recepcionHastaParameter, cajaParameter, ordenParameter, referenciaParameter, movimientoParameter, otrosParameter, estatusVencimientoParameter)
    End Function

    Public Overridable Function spConsReporte(eMpresaID As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim eMpresaIDParameter As ObjectParameter = If(eMpresaID.HasValue, New ObjectParameter("EMpresaID", eMpresaID), New ObjectParameter("EMpresaID", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsReporte", eMpresaIDParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsSerieFolio_CBB_EmpresaId(empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsSerieFolio_CBB_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsSerieFolio_CBB_EmpresaId_Result)("spConsSerieFolio_CBB_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spConsSerieFolio_CFDI_EmpresaId(empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsSerieFolio_CFDI_EmpresaId_Result)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsSerieFolio_CFDI_EmpresaId_Result)("spConsSerieFolio_CFDI_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spConsSerieFolio_EmpresaId(empresaId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsSerieFolio_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spConsSerieporUsu(empresaID As Nullable(Of Integer), usuarioID As Nullable(Of Integer), tipoLicencia As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim tipoLicenciaParameter As ObjectParameter = If(tipoLicencia.HasValue, New ObjectParameter("TipoLicencia", tipoLicencia), New ObjectParameter("TipoLicencia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsSerieporUsu", empresaIDParameter, usuarioIDParameter, tipoLicenciaParameter)
    End Function

    Public Overridable Function spConsSeriesDisponibles_EmpresaId(empresaId As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsSeriesDisponibles_EmpresaId", empresaIdParameter)
    End Function

    Public Overridable Function spConsSubCategoriaArticulo_CategoriaArticuloId(categoriaArticuloId As Nullable(Of Integer)) As ObjectResult(Of spConsSubCategoriaArticulo_CategoriaArticuloId_Result)
        Dim categoriaArticuloIdParameter As ObjectParameter = If(categoriaArticuloId.HasValue, New ObjectParameter("CategoriaArticuloId", categoriaArticuloId), New ObjectParameter("CategoriaArticuloId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsSubCategoriaArticulo_CategoriaArticuloId_Result)("spConsSubCategoriaArticulo_CategoriaArticuloId", categoriaArticuloIdParameter)
    End Function

    Public Overridable Function spConsTipoComprobante(tipoLicencia As Nullable(Of Integer)) As ObjectResult(Of spConsTipoComprobante_Result)
        Dim tipoLicenciaParameter As ObjectParameter = If(tipoLicencia.HasValue, New ObjectParameter("TipoLicencia", tipoLicencia), New ObjectParameter("TipoLicencia", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsTipoComprobante_Result)("spConsTipoComprobante", tipoLicenciaParameter)
    End Function

    Public Overridable Function spConsTipoImpuesto() As ObjectResult(Of spConsTipoImpuesto_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsTipoImpuesto_Result)("spConsTipoImpuesto")
    End Function

    Public Overridable Function spConsTiposAddenda(tipoInformacionId As Nullable(Of Integer)) As ObjectResult(Of spConsTiposAddenda_Result)
        Dim tipoInformacionIdParameter As ObjectParameter = If(tipoInformacionId.HasValue, New ObjectParameter("TipoInformacionId", tipoInformacionId), New ObjectParameter("TipoInformacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsTiposAddenda_Result)("spConsTiposAddenda", tipoInformacionIdParameter)
    End Function

    Public Overridable Function spCONSUsuario_Permiso(usuario As String, contraseña As String) As Integer
        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Dim contraseñaParameter As ObjectParameter = If(contraseña IsNot Nothing, New ObjectParameter("Contraseña", contraseña), New ObjectParameter("Contraseña", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCONSUsuario_Permiso", usuarioParameter, contraseñaParameter)
    End Function

    Public Overridable Function spConsUsuarioSerieFolio(usuarioId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId.HasValue, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsUsuarioSerieFolio", usuarioIdParameter)
    End Function

    Public Overridable Function spConsUsuarioSerieFolio_CBB(usuarioId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId.HasValue, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsUsuarioSerieFolio_CBB", usuarioIdParameter)
    End Function

    Public Overridable Function spConsUsuarioSerieFolio_CBB_UsuarioId_EmpresaId(usuarioId As Nullable(Of Integer), empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId.HasValue, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsUsuarioSerieFolio_CBB_UsuarioId_EmpresaId", usuarioIdParameter, empresaIdParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsUsuarioSerieFolio_CFDI_UsuarioId_EmpresaId(usuarioId As Nullable(Of Integer), empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId.HasValue, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsUsuarioSerieFolio_CFDI_UsuarioId_EmpresaId", usuarioIdParameter, empresaIdParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spConsUsuarioSerieFolio_UsuarioId_EmpresaId(usuarioId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId.HasValue, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsUsuarioSerieFolio_UsuarioId_EmpresaId", usuarioIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spConsVencimientosporBucket(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spConsVencimientosporBucket", empresaIdParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spCONSverion_Factura() As ObjectResult(Of spCONSverion_Factura_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCONSverion_Factura_Result)("spCONSverion_Factura")
    End Function

    Public Overridable Function spConsXML(comprobanteID As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim comprobanteIDParameter As ObjectParameter = If(comprobanteID.HasValue, New ObjectParameter("ComprobanteID", comprobanteID), New ObjectParameter("ComprobanteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spConsXML", comprobanteIDParameter)
    End Function

    Public Overridable Function spCrea_Backup(path As String, bdName As String) As Integer
        Dim pathParameter As ObjectParameter = If(path IsNot Nothing, New ObjectParameter("path", path), New ObjectParameter("path", GetType(String)))

        Dim bdNameParameter As ObjectParameter = If(bdName IsNot Nothing, New ObjectParameter("bdName", bdName), New ObjectParameter("bdName", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spCrea_Backup", pathParameter, bdNameParameter)
    End Function

    Public Overridable Function spDebitaFoliosDisponibles(empresaId As Nullable(Of Integer), ultimoComprobante As Nullable(Of Integer), usuarioUltimoComprobante As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim ultimoComprobanteParameter As ObjectParameter = If(ultimoComprobante.HasValue, New ObjectParameter("UltimoComprobante", ultimoComprobante), New ObjectParameter("UltimoComprobante", GetType(Integer)))

        Dim usuarioUltimoComprobanteParameter As ObjectParameter = If(usuarioUltimoComprobante IsNot Nothing, New ObjectParameter("UsuarioUltimoComprobante", usuarioUltimoComprobante), New ObjectParameter("UsuarioUltimoComprobante", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDebitaFoliosDisponibles", empresaIdParameter, ultimoComprobanteParameter, usuarioUltimoComprobanteParameter)
    End Function

    Public Overridable Function spDelAddendaComprobante(comprobanteId As Nullable(Of Integer)) As Integer
        Dim comprobanteIdParameter As ObjectParameter = If(comprobanteId.HasValue, New ObjectParameter("ComprobanteId", comprobanteId), New ObjectParameter("ComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelAddendaComprobante", comprobanteIdParameter)
    End Function

    Public Overridable Function spDelArticulo(articuloId As Nullable(Of Integer)) As Integer
        Dim articuloIdParameter As ObjectParameter = If(articuloId.HasValue, New ObjectParameter("ArticuloId", articuloId), New ObjectParameter("ArticuloId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelArticulo", articuloIdParameter)
    End Function

    Public Overridable Function spDELCategoriaArticulo(categoriaArticuloID As Nullable(Of Integer)) As Integer
        Dim categoriaArticuloIDParameter As ObjectParameter = If(categoriaArticuloID.HasValue, New ObjectParameter("CategoriaArticuloID", categoriaArticuloID), New ObjectParameter("CategoriaArticuloID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELCategoriaArticulo", categoriaArticuloIDParameter)
    End Function

    Public Overridable Function spDelConfiguracionImpuesto(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelConfiguracionImpuesto", empresaIdParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spDelContactoEmpresa(empresaId As Nullable(Of Integer), contactoId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim contactoIdParameter As ObjectParameter = If(contactoId.HasValue, New ObjectParameter("ContactoId", contactoId), New ObjectParameter("ContactoId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelContactoEmpresa", empresaIdParameter, contactoIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spDELEmpleado(empleadoID As Nullable(Of Integer)) As ObjectResult(Of Nullable(Of Integer))
        Dim empleadoIDParameter As ObjectParameter = If(empleadoID.HasValue, New ObjectParameter("EmpleadoID", empleadoID), New ObjectParameter("EmpleadoID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spDELEmpleado", empleadoIDParameter)
    End Function

    Public Overridable Function spDelLicencia(empresaId As Nullable(Of Integer), licencia As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim licenciaParameter As ObjectParameter = If(licencia IsNot Nothing, New ObjectParameter("Licencia", licencia), New ObjectParameter("Licencia", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelLicencia", empresaIdParameter, licenciaParameter)
    End Function

    Public Overridable Function spDelPais(paisId As Nullable(Of Integer), pais As String) As Integer
        Dim paisIdParameter As ObjectParameter = If(paisId.HasValue, New ObjectParameter("PaisId", paisId), New ObjectParameter("PaisId", GetType(Integer)))

        Dim paisParameter As ObjectParameter = If(pais IsNot Nothing, New ObjectParameter("Pais", pais), New ObjectParameter("Pais", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelPais", paisIdParameter, paisParameter)
    End Function

    Public Overridable Function spDelSerieFolio(empresaId As Nullable(Of Integer), serie As String, folioInicial As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioInicialParameter As ObjectParameter = If(folioInicial IsNot Nothing, New ObjectParameter("FolioInicial", folioInicial), New ObjectParameter("FolioInicial", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelSerieFolio", empresaIdParameter, serieParameter, folioInicialParameter)
    End Function

    Public Overridable Function spDelSerieFolio_CBB(empresaId As Nullable(Of Integer), serie As String, folioInicial As String, tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioInicialParameter As ObjectParameter = If(folioInicial IsNot Nothing, New ObjectParameter("FolioInicial", folioInicial), New ObjectParameter("FolioInicial", GetType(String)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelSerieFolio_CBB", empresaIdParameter, serieParameter, folioInicialParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spDELSerieFolio_CFDI(sERIE As String, folioInicial As Nullable(Of Integer), folioFinal As Nullable(Of Integer), tipoComprobante As Nullable(Of Integer), empresaID As Nullable(Of Integer)) As Integer
        Dim sERIEParameter As ObjectParameter = If(sERIE IsNot Nothing, New ObjectParameter("SERIE", sERIE), New ObjectParameter("SERIE", GetType(String)))

        Dim folioInicialParameter As ObjectParameter = If(folioInicial.HasValue, New ObjectParameter("FolioInicial", folioInicial), New ObjectParameter("FolioInicial", GetType(Integer)))

        Dim folioFinalParameter As ObjectParameter = If(folioFinal.HasValue, New ObjectParameter("FolioFinal", folioFinal), New ObjectParameter("FolioFinal", GetType(Integer)))

        Dim tipoComprobanteParameter As ObjectParameter = If(tipoComprobante.HasValue, New ObjectParameter("TipoComprobante", tipoComprobante), New ObjectParameter("TipoComprobante", GetType(Integer)))

        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELSerieFolio_CFDI", sERIEParameter, folioInicialParameter, folioFinalParameter, tipoComprobanteParameter, empresaIDParameter)
    End Function

    Public Overridable Function spDELSubCategoriaArticulo(subCategoriaArticuloID As Nullable(Of Integer)) As Integer
        Dim subCategoriaArticuloIDParameter As ObjectParameter = If(subCategoriaArticuloID.HasValue, New ObjectParameter("SubCategoriaArticuloID", subCategoriaArticuloID), New ObjectParameter("SubCategoriaArticuloID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELSubCategoriaArticulo", subCategoriaArticuloIDParameter)
    End Function

    Public Overridable Function spDelTipoComprobante(tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelTipoComprobante", tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spDELTipoUnidad(tipoUnidadID As Nullable(Of Integer)) As Integer
        Dim tipoUnidadIDParameter As ObjectParameter = If(tipoUnidadID.HasValue, New ObjectParameter("TipoUnidadID", tipoUnidadID), New ObjectParameter("TipoUnidadID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELTipoUnidad", tipoUnidadIDParameter)
    End Function

    Public Overridable Function spDELUltimaFactura(comprobanteid As Nullable(Of Integer)) As Integer
        Dim comprobanteidParameter As ObjectParameter = If(comprobanteid.HasValue, New ObjectParameter("Comprobanteid", comprobanteid), New ObjectParameter("Comprobanteid", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELUltimaFactura", comprobanteidParameter)
    End Function

    Public Overridable Function spDELUsario_Empresa(usuarioID As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELUsario_Empresa", usuarioIDParameter)
    End Function

    Public Overridable Function spDELUsario_Organizacion(usuarioID As String, organizacionId As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID IsNot Nothing, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELUsario_Organizacion", usuarioIDParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spDELUsuario(usuarioID As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELUsuario", usuarioIDParameter)
    End Function

    Public Overridable Function spDelUsuarioSerieFolio(usuarioId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId.HasValue, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelUsuarioSerieFolio", usuarioIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spDelUsuarioSerieFolio_CBB(usuarioId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId.HasValue, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelUsuarioSerieFolio_CBB", usuarioIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spDelUsuarioSerieFolio_CFDI(usuarioId As String, empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelUsuarioSerieFolio_CFDI", usuarioIdParameter, empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spDesactivaLicencia(empresaId As Nullable(Of Integer), licencia As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim licenciaParameter As ObjectParameter = If(licencia IsNot Nothing, New ObjectParameter("Licencia", licencia), New ObjectParameter("Licencia", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDesactivaLicencia", empresaIdParameter, licenciaParameter)
    End Function

    Public Overridable Function spDesactivaSerieFolio_CBB_Completado(empresaId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDesactivaSerieFolio_CBB_Completado", empresaIdParameter, serieParameter, folioParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spDesactivaSerieFolio_CFDI_Completado(empresaId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal), tipoComprobanteId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDesactivaSerieFolio_CFDI_Completado", empresaIdParameter, serieParameter, folioParameter, tipoComprobanteIdParameter)
    End Function

    Public Overridable Function spDesactivaSerieFolioCompletado(empresaId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDesactivaSerieFolioCompletado", empresaIdParameter, serieParameter, folioParameter)
    End Function

    Public Overridable Function spDWLxml(comprobanteID As Nullable(Of Integer)) As ObjectResult(Of String)
        Dim comprobanteIDParameter As ObjectParameter = If(comprobanteID.HasValue, New ObjectParameter("ComprobanteID", comprobanteID), New ObjectParameter("ComprobanteID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spDWLxml", comprobanteIDParameter)
    End Function

    Public Overridable Function spFolioDisponible_EmpresaId_Serie_Folio(empresaId As Nullable(Of Integer), serie As String, folio As Nullable(Of Decimal)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioParameter As ObjectParameter = If(folio.HasValue, New ObjectParameter("Folio", folio), New ObjectParameter("Folio", GetType(Decimal)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spFolioDisponible_EmpresaId_Serie_Folio", empresaIdParameter, serieParameter, folioParameter)
    End Function

    Public Overridable Function spGeneraReporteMensualSAT(empresaId As Nullable(Of Integer), año As Nullable(Of Integer), mes As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim añoParameter As ObjectParameter = If(año.HasValue, New ObjectParameter("Año", año), New ObjectParameter("Año", GetType(Integer)))

        Dim mesParameter As ObjectParameter = If(mes.HasValue, New ObjectParameter("Mes", mes), New ObjectParameter("Mes", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGeneraReporteMensualSAT", empresaIdParameter, añoParameter, mesParameter)
    End Function

    Public Overridable Function spGetClienteId(rFC As String, calle As String) As ObjectResult(Of Nullable(Of Integer))
        Dim rFCParameter As ObjectParameter = If(rFC IsNot Nothing, New ObjectParameter("RFC", rFC), New ObjectParameter("RFC", GetType(String)))

        Dim calleParameter As ObjectParameter = If(calle IsNot Nothing, New ObjectParameter("Calle", calle), New ObjectParameter("Calle", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of Nullable(Of Integer))("spGetClienteId", rFCParameter, calleParameter)
    End Function

    Public Overridable Function spGetEmpresaId(rFC As String, empresaId As ObjectParameter) As Integer
        Dim rFCParameter As ObjectParameter = If(rFC IsNot Nothing, New ObjectParameter("RFC", rFC), New ObjectParameter("RFC", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGetEmpresaId", rFCParameter, empresaId)
    End Function

    Public Overridable Function spGetRFC(rFC As ObjectParameter, empresaId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spGetRFC", rFC, empresaIdParameter)
    End Function

    Public Overridable Function spGetSerie_PuntoVenta(puntoVenta As String) As ObjectResult(Of String)
        Dim puntoVentaParameter As ObjectParameter = If(puntoVenta IsNot Nothing, New ObjectParameter("PuntoVenta", puntoVenta), New ObjectParameter("PuntoVenta", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of String)("spGetSerie_PuntoVenta", puntoVentaParameter)
    End Function

    Public Overridable Function spInsArticulo(nombreArticulo As String, precioUnitario As Nullable(Of Decimal), codigoArticulo As String, codigoBarras As String, subCategoriaArticuloId As Nullable(Of Integer), tipoUnidadId As Nullable(Of Integer), tipoInformacionId As Nullable(Of Integer), dominioInformacionId As Nullable(Of Integer)) As Integer
        Dim nombreArticuloParameter As ObjectParameter = If(nombreArticulo IsNot Nothing, New ObjectParameter("NombreArticulo", nombreArticulo), New ObjectParameter("NombreArticulo", GetType(String)))

        Dim precioUnitarioParameter As ObjectParameter = If(precioUnitario.HasValue, New ObjectParameter("PrecioUnitario", precioUnitario), New ObjectParameter("PrecioUnitario", GetType(Decimal)))

        Dim codigoArticuloParameter As ObjectParameter = If(codigoArticulo IsNot Nothing, New ObjectParameter("CodigoArticulo", codigoArticulo), New ObjectParameter("CodigoArticulo", GetType(String)))

        Dim codigoBarrasParameter As ObjectParameter = If(codigoBarras IsNot Nothing, New ObjectParameter("CodigoBarras", codigoBarras), New ObjectParameter("CodigoBarras", GetType(String)))

        Dim subCategoriaArticuloIdParameter As ObjectParameter = If(subCategoriaArticuloId.HasValue, New ObjectParameter("SubCategoriaArticuloId", subCategoriaArticuloId), New ObjectParameter("SubCategoriaArticuloId", GetType(Integer)))

        Dim tipoUnidadIdParameter As ObjectParameter = If(tipoUnidadId.HasValue, New ObjectParameter("TipoUnidadId", tipoUnidadId), New ObjectParameter("TipoUnidadId", GetType(Integer)))

        Dim tipoInformacionIdParameter As ObjectParameter = If(tipoInformacionId.HasValue, New ObjectParameter("TipoInformacionId", tipoInformacionId), New ObjectParameter("TipoInformacionId", GetType(Integer)))

        Dim dominioInformacionIdParameter As ObjectParameter = If(dominioInformacionId.HasValue, New ObjectParameter("DominioInformacionId", dominioInformacionId), New ObjectParameter("DominioInformacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsArticulo", nombreArticuloParameter, precioUnitarioParameter, codigoArticuloParameter, codigoBarrasParameter, subCategoriaArticuloIdParameter, tipoUnidadIdParameter, tipoInformacionIdParameter, dominioInformacionIdParameter)
    End Function

    Public Overridable Function spINSCategoraArticulo(categoriaArticulo As String) As Integer
        Dim categoriaArticuloParameter As ObjectParameter = If(categoriaArticulo IsNot Nothing, New ObjectParameter("CategoriaArticulo", categoriaArticulo), New ObjectParameter("CategoriaArticulo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spINSCategoraArticulo", categoriaArticuloParameter)
    End Function

    Public Overridable Function spInsCategoriaArticulo(categoriaArticulo As String) As Integer
        Dim categoriaArticuloParameter As ObjectParameter = If(categoriaArticulo IsNot Nothing, New ObjectParameter("CategoriaArticulo", categoriaArticulo), New ObjectParameter("CategoriaArticulo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsCategoriaArticulo", categoriaArticuloParameter)
    End Function

    Public Overridable Function spINSUsario_Empresa(usuarioID As Nullable(Of Integer), empresaID As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spINSUsario_Empresa", usuarioIDParameter, empresaIDParameter)
    End Function

    Public Overridable Function spINSUsario_Organizacion(usuarioID As String, perfilID As Nullable(Of Integer), organizacionId As Nullable(Of Integer), usuarioIDingresa As String) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID IsNot Nothing, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(String)))

        Dim perfilIDParameter As ObjectParameter = If(perfilID.HasValue, New ObjectParameter("PerfilID", perfilID), New ObjectParameter("PerfilID", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIDingresaParameter As ObjectParameter = If(usuarioIDingresa IsNot Nothing, New ObjectParameter("UsuarioIDingresa", usuarioIDingresa), New ObjectParameter("UsuarioIDingresa", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spINSUsario_Organizacion", usuarioIDParameter, perfilIDParameter, organizacionIdParameter, usuarioIDingresaParameter)
    End Function

    Public Overridable Function spINSUsuario(usuarioID As Nullable(Of Integer), contraseña As String, usuario As String, nombre As String, activoFLG As Nullable(Of Boolean), correoElectronico As String, perfilID As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID.HasValue, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(Integer)))

        Dim contraseñaParameter As ObjectParameter = If(contraseña IsNot Nothing, New ObjectParameter("Contraseña", contraseña), New ObjectParameter("Contraseña", GetType(String)))

        Dim usuarioParameter As ObjectParameter = If(usuario IsNot Nothing, New ObjectParameter("Usuario", usuario), New ObjectParameter("Usuario", GetType(String)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim activoFLGParameter As ObjectParameter = If(activoFLG.HasValue, New ObjectParameter("ActivoFLG", activoFLG), New ObjectParameter("ActivoFLG", GetType(Boolean)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim perfilIDParameter As ObjectParameter = If(perfilID.HasValue, New ObjectParameter("PerfilID", perfilID), New ObjectParameter("PerfilID", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spINSUsuario", usuarioIDParameter, contraseñaParameter, usuarioParameter, nombreParameter, activoFLGParameter, correoElectronicoParameter, perfilIDParameter)
    End Function

    Public Overridable Function spSELUsario_Empresa(usuarioId As String, organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spSELUsario_Empresa_Result)
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spSELUsario_Empresa_Result)("spSELUsario_Empresa", usuarioIdParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spInsUsuarioSerieFolio_CFDI(usuarioId As String, empresaId As Nullable(Of Integer), serie As String, folioInicial As String, tipoComprobanteId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As Integer
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim serieParameter As ObjectParameter = If(serie IsNot Nothing, New ObjectParameter("Serie", serie), New ObjectParameter("Serie", GetType(String)))

        Dim folioInicialParameter As ObjectParameter = If(folioInicial IsNot Nothing, New ObjectParameter("FolioInicial", folioInicial), New ObjectParameter("FolioInicial", GetType(String)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsUsuarioSerieFolio_CFDI", usuarioIdParameter, empresaIdParameter, serieParameter, folioInicialParameter, tipoComprobanteIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spSelUsuarioSerieFolio_CFDI(usuarioId As String, empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As ObjectResult(Of spSelUsuarioSerieFolio_CFDI_Result)
        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spSelUsuarioSerieFolio_CFDI_Result)("spSelUsuarioSerieFolio_CFDI", usuarioIdParameter, empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spInsConfiguracionCorreo(empresaId As Nullable(Of Integer), servidor As String, puerto As Nullable(Of Integer), cuenta As String, contrasena As String, usaSSL As Nullable(Of Boolean), activo As Nullable(Of Boolean)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim servidorParameter As ObjectParameter = If(servidor IsNot Nothing, New ObjectParameter("Servidor", servidor), New ObjectParameter("Servidor", GetType(String)))

        Dim puertoParameter As ObjectParameter = If(puerto.HasValue, New ObjectParameter("Puerto", puerto), New ObjectParameter("Puerto", GetType(Integer)))

        Dim cuentaParameter As ObjectParameter = If(cuenta IsNot Nothing, New ObjectParameter("Cuenta", cuenta), New ObjectParameter("Cuenta", GetType(String)))

        Dim contrasenaParameter As ObjectParameter = If(contrasena IsNot Nothing, New ObjectParameter("Contrasena", contrasena), New ObjectParameter("Contrasena", GetType(String)))

        Dim usaSSLParameter As ObjectParameter = If(usaSSL.HasValue, New ObjectParameter("UsaSSL", usaSSL), New ObjectParameter("UsaSSL", GetType(Boolean)))

        Dim activoParameter As ObjectParameter = If(activo.HasValue, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsConfiguracionCorreo", empresaIdParameter, servidorParameter, puertoParameter, cuentaParameter, contrasenaParameter, usaSSLParameter, activoParameter)
    End Function

    Public Overridable Function spUPDConfiguracionEmpresaCorreo(tituloCorreo As String, cuerpoCorreo As String, empresaID As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As Integer
        Dim tituloCorreoParameter As ObjectParameter = If(tituloCorreo IsNot Nothing, New ObjectParameter("TituloCorreo", tituloCorreo), New ObjectParameter("TituloCorreo", GetType(String)))

        Dim cuerpoCorreoParameter As ObjectParameter = If(cuerpoCorreo IsNot Nothing, New ObjectParameter("CuerpoCorreo", cuerpoCorreo), New ObjectParameter("CuerpoCorreo", GetType(String)))

        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUPDConfiguracionEmpresaCorreo", tituloCorreoParameter, cuerpoCorreoParameter, empresaIDParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spUpdConfiguracionCorreo(empresaId As Nullable(Of Integer), servidor As String, puerto As Nullable(Of Integer), cuenta As String, contrasena As String, usaSSL As Nullable(Of Boolean), activo As Nullable(Of Boolean), organizacionId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim servidorParameter As ObjectParameter = If(servidor IsNot Nothing, New ObjectParameter("Servidor", servidor), New ObjectParameter("Servidor", GetType(String)))

        Dim puertoParameter As ObjectParameter = If(puerto.HasValue, New ObjectParameter("Puerto", puerto), New ObjectParameter("Puerto", GetType(Integer)))

        Dim cuentaParameter As ObjectParameter = If(cuenta IsNot Nothing, New ObjectParameter("Cuenta", cuenta), New ObjectParameter("Cuenta", GetType(String)))

        Dim contrasenaParameter As ObjectParameter = If(contrasena IsNot Nothing, New ObjectParameter("Contrasena", contrasena), New ObjectParameter("Contrasena", GetType(String)))

        Dim usaSSLParameter As ObjectParameter = If(usaSSL.HasValue, New ObjectParameter("UsaSSL", usaSSL), New ObjectParameter("UsaSSL", GetType(Boolean)))

        Dim activoParameter As ObjectParameter = If(activo.HasValue, New ObjectParameter("Activo", activo), New ObjectParameter("Activo", GetType(Boolean)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdConfiguracionCorreo", empresaIdParameter, servidorParameter, puertoParameter, cuentaParameter, contrasenaParameter, usaSSLParameter, activoParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spUpdConfiguracionEmpresa(empresaId As Nullable(Of Integer), nombreComercial As String, iVAPredeterminado As Nullable(Of Integer), telefono As String, correoElectronico As String, mensajeAdicionalFactura As String, organizacionId As Nullable(Of Integer), nombreLogo As String, tituloCorreo As String, cuerpoCorreo As String) As ObjectResult(Of ResponseInsert)
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim nombreComercialParameter As ObjectParameter = If(nombreComercial IsNot Nothing, New ObjectParameter("NombreComercial", nombreComercial), New ObjectParameter("NombreComercial", GetType(String)))

        Dim iVAPredeterminadoParameter As ObjectParameter = If(iVAPredeterminado.HasValue, New ObjectParameter("IVAPredeterminado", iVAPredeterminado), New ObjectParameter("IVAPredeterminado", GetType(Integer)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim mensajeAdicionalFacturaParameter As ObjectParameter = If(mensajeAdicionalFactura IsNot Nothing, New ObjectParameter("MensajeAdicionalFactura", mensajeAdicionalFactura), New ObjectParameter("MensajeAdicionalFactura", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim nombreLogoParameter As ObjectParameter = If(nombreLogo IsNot Nothing, New ObjectParameter("NombreLogo", nombreLogo), New ObjectParameter("NombreLogo", GetType(String)))

        Dim tituloCorreoParameter As ObjectParameter = If(tituloCorreo IsNot Nothing, New ObjectParameter("TituloCorreo", tituloCorreo), New ObjectParameter("TituloCorreo", GetType(String)))

        Dim cuerpoCorreoParameter As ObjectParameter = If(cuerpoCorreo IsNot Nothing, New ObjectParameter("CuerpoCorreo", cuerpoCorreo), New ObjectParameter("CuerpoCorreo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of ResponseInsert)("spUpdConfiguracionEmpresa", empresaIdParameter, nombreComercialParameter, iVAPredeterminadoParameter, telefonoParameter, correoElectronicoParameter, mensajeAdicionalFacturaParameter, organizacionIdParameter, nombreLogoParameter, tituloCorreoParameter, cuerpoCorreoParameter)
    End Function

    Public Overridable Function spInsConfiguracionEmpresa(empresaId As Nullable(Of Integer), nombreComercial As String, iVAPredeterminado As Nullable(Of Integer), telefono As String, correoElectronico As String, mensajeAdicionalFactura As String, organizacionId As Nullable(Of Integer), nombreLogo As String, tituloCorreo As String, cuerpoCorreo As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim nombreComercialParameter As ObjectParameter = If(nombreComercial IsNot Nothing, New ObjectParameter("NombreComercial", nombreComercial), New ObjectParameter("NombreComercial", GetType(String)))

        Dim iVAPredeterminadoParameter As ObjectParameter = If(iVAPredeterminado.HasValue, New ObjectParameter("IVAPredeterminado", iVAPredeterminado), New ObjectParameter("IVAPredeterminado", GetType(Integer)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim mensajeAdicionalFacturaParameter As ObjectParameter = If(mensajeAdicionalFactura IsNot Nothing, New ObjectParameter("MensajeAdicionalFactura", mensajeAdicionalFactura), New ObjectParameter("MensajeAdicionalFactura", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim nombreLogoParameter As ObjectParameter = If(nombreLogo IsNot Nothing, New ObjectParameter("NombreLogo", nombreLogo), New ObjectParameter("NombreLogo", GetType(String)))

        Dim tituloCorreoParameter As ObjectParameter = If(tituloCorreo IsNot Nothing, New ObjectParameter("TituloCorreo", tituloCorreo), New ObjectParameter("TituloCorreo", GetType(String)))

        Dim cuerpoCorreoParameter As ObjectParameter = If(cuerpoCorreo IsNot Nothing, New ObjectParameter("CuerpoCorreo", cuerpoCorreo), New ObjectParameter("CuerpoCorreo", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsConfiguracionEmpresa", empresaIdParameter, nombreComercialParameter, iVAPredeterminadoParameter, telefonoParameter, correoElectronicoParameter, mensajeAdicionalFacturaParameter, organizacionIdParameter, nombreLogoParameter, tituloCorreoParameter, cuerpoCorreoParameter)
    End Function

    Public Overridable Function spInsConfiguracionImpuesto(empresaId As Nullable(Of Integer), tipoComprobanteId As Nullable(Of Integer), tipoImpuestoId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim tipoComprobanteIdParameter As ObjectParameter = If(tipoComprobanteId.HasValue, New ObjectParameter("TipoComprobanteId", tipoComprobanteId), New ObjectParameter("TipoComprobanteId", GetType(Integer)))

        Dim tipoImpuestoIdParameter As ObjectParameter = If(tipoImpuestoId.HasValue, New ObjectParameter("TipoImpuestoId", tipoImpuestoId), New ObjectParameter("TipoImpuestoId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsConfiguracionImpuesto", empresaIdParameter, tipoComprobanteIdParameter, tipoImpuestoIdParameter)
    End Function

    Public Overridable Function spInsContactoEmpresa(empresaId As Nullable(Of Integer), nombre As String, telefonoFijo As String, telefonoMovil As String, correoElectronico As String, puesto As String, tipoContacto As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim telefonoFijoParameter As ObjectParameter = If(telefonoFijo IsNot Nothing, New ObjectParameter("TelefonoFijo", telefonoFijo), New ObjectParameter("TelefonoFijo", GetType(String)))

        Dim telefonoMovilParameter As ObjectParameter = If(telefonoMovil IsNot Nothing, New ObjectParameter("TelefonoMovil", telefonoMovil), New ObjectParameter("TelefonoMovil", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim puestoParameter As ObjectParameter = If(puesto IsNot Nothing, New ObjectParameter("Puesto", puesto), New ObjectParameter("Puesto", GetType(String)))

        Dim tipoContactoParameter As ObjectParameter = If(tipoContacto IsNot Nothing, New ObjectParameter("TipoContacto", tipoContacto), New ObjectParameter("TipoContacto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsContactoEmpresa", empresaIdParameter, nombreParameter, telefonoFijoParameter, telefonoMovilParameter, correoElectronicoParameter, puestoParameter, tipoContactoParameter)
    End Function

    Public Overridable Function spUpdContactoEmpresa(empresaId As Nullable(Of Integer), contactoId As Nullable(Of Integer), nombre As String, telefonoFijo As String, telefonoMovil As String, correoElectronico As String, puesto As String, tipoContacto As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim contactoIdParameter As ObjectParameter = If(contactoId.HasValue, New ObjectParameter("ContactoId", contactoId), New ObjectParameter("ContactoId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim telefonoFijoParameter As ObjectParameter = If(telefonoFijo IsNot Nothing, New ObjectParameter("TelefonoFijo", telefonoFijo), New ObjectParameter("TelefonoFijo", GetType(String)))

        Dim telefonoMovilParameter As ObjectParameter = If(telefonoMovil IsNot Nothing, New ObjectParameter("TelefonoMovil", telefonoMovil), New ObjectParameter("TelefonoMovil", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim puestoParameter As ObjectParameter = If(puesto IsNot Nothing, New ObjectParameter("Puesto", puesto), New ObjectParameter("Puesto", GetType(String)))

        Dim tipoContactoParameter As ObjectParameter = If(tipoContacto IsNot Nothing, New ObjectParameter("TipoContacto", tipoContacto), New ObjectParameter("TipoContacto", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdContactoEmpresa", empresaIdParameter, contactoIdParameter, nombreParameter, telefonoFijoParameter, telefonoMovilParameter, correoElectronicoParameter, puestoParameter, tipoContactoParameter)
    End Function

    Public Overridable Function spUpdConfiguracionEmpresa_EliminaCedulaFiscal(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), usuarioId As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdConfiguracionEmpresa_EliminaCedulaFiscal", empresaIdParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spUpdConfiguracionEmpresa_EliminaLogo(empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), usuarioId As String) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdConfiguracionEmpresa_EliminaLogo", empresaIdParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spSELEmpresa(empresaID As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As ObjectResult(Of spSELEmpresa_Result)
        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spSELEmpresa_Result)("spSELEmpresa", empresaIDParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spInsCertificadoEmpresa(empresaId As Nullable(Of Integer), certificadoDigital As Byte(), llavePrivada As Byte(), llavePublica As String, organizacionId As Nullable(Of Integer)) As Integer
        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim certificadoDigitalParameter As ObjectParameter = If(certificadoDigital IsNot Nothing, New ObjectParameter("CertificadoDigital", certificadoDigital), New ObjectParameter("CertificadoDigital", GetType(Byte())))

        Dim llavePrivadaParameter As ObjectParameter = If(llavePrivada IsNot Nothing, New ObjectParameter("LlavePrivada", llavePrivada), New ObjectParameter("LlavePrivada", GetType(Byte())))

        Dim llavePublicaParameter As ObjectParameter = If(llavePublica IsNot Nothing, New ObjectParameter("LlavePublica", llavePublica), New ObjectParameter("LlavePublica", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsCertificadoEmpresa", empresaIdParameter, certificadoDigitalParameter, llavePrivadaParameter, llavePublicaParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spInsEmpresaResult(nombreEmpresa As String, rFC As String, regimenFiscalId As String, activoFlg As Nullable(Of Boolean), defaultFlg As Nullable(Of Boolean), cURP As String, organizacionId As Nullable(Of Integer), usuarioId As String) As ObjectResult(Of ResponseInsert)
        Dim nombreEmpresaParameter As ObjectParameter = If(nombreEmpresa IsNot Nothing, New ObjectParameter("NombreEmpresa", nombreEmpresa), New ObjectParameter("NombreEmpresa", GetType(String)))

        Dim rFCParameter As ObjectParameter = If(rFC IsNot Nothing, New ObjectParameter("RFC", rFC), New ObjectParameter("RFC", GetType(String)))

        Dim regimenFiscalIdParameter As ObjectParameter = If(regimenFiscalId IsNot Nothing, New ObjectParameter("RegimenFiscalId", regimenFiscalId), New ObjectParameter("RegimenFiscalId", GetType(String)))

        Dim activoFlgParameter As ObjectParameter = If(activoFlg.HasValue, New ObjectParameter("ActivoFlg", activoFlg), New ObjectParameter("ActivoFlg", GetType(Boolean)))

        Dim defaultFlgParameter As ObjectParameter = If(defaultFlg.HasValue, New ObjectParameter("DefaultFlg", defaultFlg), New ObjectParameter("DefaultFlg", GetType(Boolean)))

        Dim cURPParameter As ObjectParameter = If(cURP IsNot Nothing, New ObjectParameter("CURP", cURP), New ObjectParameter("CURP", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of ResponseInsert)("spInsEmpresaResult", nombreEmpresaParameter, rFCParameter, regimenFiscalIdParameter, activoFlgParameter, defaultFlgParameter, cURPParameter, organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spALLUsuario_Empresa(organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spALLUsuario_Empresa_Result)
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spALLUsuario_Empresa_Result)("spALLUsuario_Empresa", organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spALLUsuario_Organizacion(organizacionId As Nullable(Of Integer), usuarioId As String) As ObjectResult(Of spALLUsuario_Organizacion_Result)
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spALLUsuario_Organizacion_Result)("spALLUsuario_Organizacion", organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spConUsuario_Empresa(organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer), usuarioId As String) As ObjectResult(Of spConUsuario_Empresa_Result)
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConUsuario_Empresa_Result)("spConUsuario_Empresa", organizacionIdParameter, empresaIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spINSUsuario_Empresa(usuarioID As String, empresaID As Nullable(Of Integer), organizacionId As Nullable(Of Integer), perfilId As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID IsNot Nothing, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(String)))

        Dim empresaIDParameter As ObjectParameter = If(empresaID.HasValue, New ObjectParameter("EmpresaID", empresaID), New ObjectParameter("EmpresaID", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim perfilIdParameter As ObjectParameter = If(perfilId.HasValue, New ObjectParameter("PerfilId", perfilId), New ObjectParameter("PerfilId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spINSUsuario_Empresa", usuarioIDParameter, empresaIDParameter, organizacionIdParameter, perfilIdParameter)
    End Function

    Public Overridable Function spDELUsuario_Empresa(usuarioID As String, empresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID IsNot Nothing, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(String)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELUsuario_Empresa", usuarioIDParameter, empresaIdParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spDELUsuario_Organizacion(usuarioID As String, organizacionId As Nullable(Of Integer)) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID IsNot Nothing, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDELUsuario_Organizacion", usuarioIDParameter, organizacionIdParameter)
    End Function

    Public Overridable Function spINSUsuario_Organizacion(usuarioID As String, perfilID As Nullable(Of Integer), organizacionId As Nullable(Of Integer), usuarioIDingresa As String) As Integer
        Dim usuarioIDParameter As ObjectParameter = If(usuarioID IsNot Nothing, New ObjectParameter("UsuarioID", usuarioID), New ObjectParameter("UsuarioID", GetType(String)))

        Dim perfilIDParameter As ObjectParameter = If(perfilID.HasValue, New ObjectParameter("PerfilID", perfilID), New ObjectParameter("PerfilID", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIDingresaParameter As ObjectParameter = If(usuarioIDingresa IsNot Nothing, New ObjectParameter("UsuarioIDingresa", usuarioIDingresa), New ObjectParameter("UsuarioIDingresa", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spINSUsuario_Organizacion", usuarioIDParameter, perfilIDParameter, organizacionIdParameter, usuarioIDingresaParameter)
    End Function

    Public Overridable Function spConEmpresasUsuario(organizacionId As Nullable(Of Integer), usuarioId As String) As ObjectResult(Of spConEmpresasUsuario_Result)
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim usuarioIdParameter As ObjectParameter = If(usuarioId IsNot Nothing, New ObjectParameter("UsuarioId", usuarioId), New ObjectParameter("UsuarioId", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConEmpresasUsuario_Result)("spConEmpresasUsuario", organizacionIdParameter, usuarioIdParameter)
    End Function

    Public Overridable Function spCONOrganizacion_Usuario_Invitacion(idInvitacion As Nullable(Of Integer)) As ObjectResult(Of spCONOrganizacion_Usuario_Invitacion_Result)
        Dim idInvitacionParameter As ObjectParameter = If(idInvitacion.HasValue, New ObjectParameter("IdInvitacion", idInvitacion), New ObjectParameter("IdInvitacion", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spCONOrganizacion_Usuario_Invitacion_Result)("spCONOrganizacion_Usuario_Invitacion", idInvitacionParameter)
    End Function

    Public Overridable Function spINSOrganizacion_Usuario_Invitacion(email As String, organizacionId As Nullable(Of Integer), perfilId As Nullable(Of Integer), usuarioIdInvita As String) As Integer
        Dim emailParameter As ObjectParameter = If(email IsNot Nothing, New ObjectParameter("Email", email), New ObjectParameter("Email", GetType(String)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim perfilIdParameter As ObjectParameter = If(perfilId.HasValue, New ObjectParameter("PerfilId", perfilId), New ObjectParameter("PerfilId", GetType(Integer)))

        Dim usuarioIdInvitaParameter As ObjectParameter = If(usuarioIdInvita IsNot Nothing, New ObjectParameter("UsuarioIdInvita", usuarioIdInvita), New ObjectParameter("UsuarioIdInvita", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spINSOrganizacion_Usuario_Invitacion", emailParameter, organizacionIdParameter, perfilIdParameter, usuarioIdInvitaParameter)
    End Function

    Public Overridable Function spUPDOrganizacion_Usuario_Invitacion(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("Id", id), New ObjectParameter("Id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUPDOrganizacion_Usuario_Invitacion", idParameter)
    End Function

    Public Overridable Function spUpdCliente_Cuenta_Contable(clienteID As Nullable(Of Integer), cuentaContable As String) As Integer
        Dim clienteIDParameter As ObjectParameter = If(clienteID.HasValue, New ObjectParameter("ClienteID", clienteID), New ObjectParameter("ClienteID", GetType(Integer)))

        Dim cuentaContableParameter As ObjectParameter = If(cuentaContable IsNot Nothing, New ObjectParameter("CuentaContable", cuentaContable), New ObjectParameter("CuentaContable", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdCliente_Cuenta_Contable", clienteIDParameter, cuentaContableParameter)
    End Function

    Public Overridable Function spAllCliente(organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spAllCliente_Result)
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllCliente_Result)("spAllCliente", organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spConsConfiguracionCliente_ClienteId(clienteEmpresaId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsConfiguracionCliente_ClienteId_Result)
        Dim clienteEmpresaIdParameter As ObjectParameter = If(clienteEmpresaId.HasValue, New ObjectParameter("ClienteEmpresaId", clienteEmpresaId), New ObjectParameter("ClienteEmpresaId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsConfiguracionCliente_ClienteId_Result)("spConsConfiguracionCliente_ClienteId", clienteEmpresaIdParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spDelCliente(clienteId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As Integer
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelCliente", clienteIdParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spInsConfiguracionCliente(clienteEmpresaId As Nullable(Of Integer), iVAPredeterminado As Nullable(Of Integer), telefono As String, correoElectronico As String, diasCredito As Nullable(Of Integer)) As Integer
        Dim clienteEmpresaIdParameter As ObjectParameter = If(clienteEmpresaId.HasValue, New ObjectParameter("ClienteEmpresaId", clienteEmpresaId), New ObjectParameter("ClienteEmpresaId", GetType(Integer)))

        Dim iVAPredeterminadoParameter As ObjectParameter = If(iVAPredeterminado.HasValue, New ObjectParameter("IVAPredeterminado", iVAPredeterminado), New ObjectParameter("IVAPredeterminado", GetType(Integer)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim diasCreditoParameter As ObjectParameter = If(diasCredito.HasValue, New ObjectParameter("DiasCredito", diasCredito), New ObjectParameter("DiasCredito", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsConfiguracionCliente", clienteEmpresaIdParameter, iVAPredeterminadoParameter, telefonoParameter, correoElectronicoParameter, diasCreditoParameter)
    End Function

    Public Overridable Function spInsDomicilioCliente(clienteEmpresaId As Nullable(Of Integer), calle As String, numeroExterno As String, numeroInterno As String, colonia As String, cP As String, municipio As String, estadoId As Nullable(Of Integer)) As ObjectResult(Of spInsDomicilioCliente_Result)
        Dim clienteEmpresaIdParameter As ObjectParameter = If(clienteEmpresaId.HasValue, New ObjectParameter("ClienteEmpresaId", clienteEmpresaId), New ObjectParameter("ClienteEmpresaId", GetType(Integer)))

        Dim calleParameter As ObjectParameter = If(calle IsNot Nothing, New ObjectParameter("Calle", calle), New ObjectParameter("Calle", GetType(String)))

        Dim numeroExternoParameter As ObjectParameter = If(numeroExterno IsNot Nothing, New ObjectParameter("NumeroExterno", numeroExterno), New ObjectParameter("NumeroExterno", GetType(String)))

        Dim numeroInternoParameter As ObjectParameter = If(numeroInterno IsNot Nothing, New ObjectParameter("NumeroInterno", numeroInterno), New ObjectParameter("NumeroInterno", GetType(String)))

        Dim coloniaParameter As ObjectParameter = If(colonia IsNot Nothing, New ObjectParameter("Colonia", colonia), New ObjectParameter("Colonia", GetType(String)))

        Dim cPParameter As ObjectParameter = If(cP IsNot Nothing, New ObjectParameter("CP", cP), New ObjectParameter("CP", GetType(String)))

        Dim municipioParameter As ObjectParameter = If(municipio IsNot Nothing, New ObjectParameter("Municipio", municipio), New ObjectParameter("Municipio", GetType(String)))

        Dim estadoIdParameter As ObjectParameter = If(estadoId.HasValue, New ObjectParameter("EstadoId", estadoId), New ObjectParameter("EstadoId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spInsDomicilioCliente_Result)("spInsDomicilioCliente", clienteEmpresaIdParameter, calleParameter, numeroExternoParameter, numeroInternoParameter, coloniaParameter, cPParameter, municipioParameter, estadoIdParameter)
    End Function

    Public Overridable Function spUpdCliente(clienteEmpresaId As Nullable(Of Integer), clienteEmpresaNombre As String, rFC As String, regimenFiscalId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As Integer
        Dim clienteEmpresaIdParameter As ObjectParameter = If(clienteEmpresaId.HasValue, New ObjectParameter("ClienteEmpresaId", clienteEmpresaId), New ObjectParameter("ClienteEmpresaId", GetType(Integer)))

        Dim clienteEmpresaNombreParameter As ObjectParameter = If(clienteEmpresaNombre IsNot Nothing, New ObjectParameter("ClienteEmpresaNombre", clienteEmpresaNombre), New ObjectParameter("ClienteEmpresaNombre", GetType(String)))

        Dim rFCParameter As ObjectParameter = If(rFC IsNot Nothing, New ObjectParameter("RFC", rFC), New ObjectParameter("RFC", GetType(String)))

        Dim regimenFiscalIdParameter As ObjectParameter = If(regimenFiscalId.HasValue, New ObjectParameter("RegimenFiscalId", regimenFiscalId), New ObjectParameter("RegimenFiscalId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdCliente", clienteEmpresaIdParameter, clienteEmpresaNombreParameter, rFCParameter, regimenFiscalIdParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spUpdConfiguracionCliente(clienteEmpresaId As Nullable(Of Integer), iVAPredeterminado As Nullable(Of Integer), telefono As String, correoElectronico As String, diasCredito As Nullable(Of Integer), organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As Integer
        Dim clienteEmpresaIdParameter As ObjectParameter = If(clienteEmpresaId.HasValue, New ObjectParameter("ClienteEmpresaId", clienteEmpresaId), New ObjectParameter("ClienteEmpresaId", GetType(Integer)))

        Dim iVAPredeterminadoParameter As ObjectParameter = If(iVAPredeterminado.HasValue, New ObjectParameter("IVAPredeterminado", iVAPredeterminado), New ObjectParameter("IVAPredeterminado", GetType(Integer)))

        Dim telefonoParameter As ObjectParameter = If(telefono IsNot Nothing, New ObjectParameter("Telefono", telefono), New ObjectParameter("Telefono", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim diasCreditoParameter As ObjectParameter = If(diasCredito.HasValue, New ObjectParameter("DiasCredito", diasCredito), New ObjectParameter("DiasCredito", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdConfiguracionCliente", clienteEmpresaIdParameter, iVAPredeterminadoParameter, telefonoParameter, correoElectronicoParameter, diasCreditoParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spUpdDomicilioCliente(domicilioClienteEmpresaId As Nullable(Of Integer), clienteEmpresaId As Nullable(Of Integer), calle As String, numeroExterno As String, numeroInterno As String, colonia As String, cP As String, municipio As String, estadoId As Nullable(Of Integer)) As Integer
        Dim domicilioClienteEmpresaIdParameter As ObjectParameter = If(domicilioClienteEmpresaId.HasValue, New ObjectParameter("DomicilioClienteEmpresaId", domicilioClienteEmpresaId), New ObjectParameter("DomicilioClienteEmpresaId", GetType(Integer)))

        Dim clienteEmpresaIdParameter As ObjectParameter = If(clienteEmpresaId.HasValue, New ObjectParameter("ClienteEmpresaId", clienteEmpresaId), New ObjectParameter("ClienteEmpresaId", GetType(Integer)))

        Dim calleParameter As ObjectParameter = If(calle IsNot Nothing, New ObjectParameter("Calle", calle), New ObjectParameter("Calle", GetType(String)))

        Dim numeroExternoParameter As ObjectParameter = If(numeroExterno IsNot Nothing, New ObjectParameter("NumeroExterno", numeroExterno), New ObjectParameter("NumeroExterno", GetType(String)))

        Dim numeroInternoParameter As ObjectParameter = If(numeroInterno IsNot Nothing, New ObjectParameter("NumeroInterno", numeroInterno), New ObjectParameter("NumeroInterno", GetType(String)))

        Dim coloniaParameter As ObjectParameter = If(colonia IsNot Nothing, New ObjectParameter("Colonia", colonia), New ObjectParameter("Colonia", GetType(String)))

        Dim cPParameter As ObjectParameter = If(cP IsNot Nothing, New ObjectParameter("CP", cP), New ObjectParameter("CP", GetType(String)))

        Dim municipioParameter As ObjectParameter = If(municipio IsNot Nothing, New ObjectParameter("Municipio", municipio), New ObjectParameter("Municipio", GetType(String)))

        Dim estadoIdParameter As ObjectParameter = If(estadoId.HasValue, New ObjectParameter("EstadoId", estadoId), New ObjectParameter("EstadoId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdDomicilioCliente", domicilioClienteEmpresaIdParameter, clienteEmpresaIdParameter, calleParameter, numeroExternoParameter, numeroInternoParameter, coloniaParameter, cPParameter, municipioParameter, estadoIdParameter)
    End Function

    Public Overridable Function spInsCliente(clienteEmpresaNombre As String, rFC As String, regimenFiscalId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spInsCliente_Result)
        Dim clienteEmpresaNombreParameter As ObjectParameter = If(clienteEmpresaNombre IsNot Nothing, New ObjectParameter("ClienteEmpresaNombre", clienteEmpresaNombre), New ObjectParameter("ClienteEmpresaNombre", GetType(String)))

        Dim rFCParameter As ObjectParameter = If(rFC IsNot Nothing, New ObjectParameter("RFC", rFC), New ObjectParameter("RFC", GetType(String)))

        Dim regimenFiscalIdParameter As ObjectParameter = If(regimenFiscalId.HasValue, New ObjectParameter("RegimenFiscalId", regimenFiscalId), New ObjectParameter("RegimenFiscalId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spInsCliente_Result)("spInsCliente", clienteEmpresaNombreParameter, rFCParameter, regimenFiscalIdParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spConsCliente_ClienteId(clienteId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsCliente_ClienteId_Result)
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsCliente_ClienteId_Result)("spConsCliente_ClienteId", clienteIdParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spConsTipoContactoCliente() As ObjectResult(Of spConsTipoContactoCliente_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsTipoContactoCliente_Result)("spConsTipoContactoCliente")
    End Function

    Public Overridable Function spAllContactoCliente(organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spAllContactoCliente_Result)
        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spAllContactoCliente_Result)("spAllContactoCliente", organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spConsContactoCliente_ClienteId(clienteId As Nullable(Of Integer)) As ObjectResult(Of spConsContactoCliente_ClienteId_Result)
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsContactoCliente_ClienteId_Result)("spConsContactoCliente_ClienteId", clienteIdParameter)
    End Function

    Public Overridable Function spInsContactoCliente(clienteId As Nullable(Of Integer), nombre As String, telefonoFijo As String, telefonoMovil As String, correoElectronico As String, puesto As String, tipoContactoClienteId As Nullable(Of Integer)) As ObjectResult(Of spInsContactoCliente_Result)
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim telefonoFijoParameter As ObjectParameter = If(telefonoFijo IsNot Nothing, New ObjectParameter("TelefonoFijo", telefonoFijo), New ObjectParameter("TelefonoFijo", GetType(String)))

        Dim telefonoMovilParameter As ObjectParameter = If(telefonoMovil IsNot Nothing, New ObjectParameter("TelefonoMovil", telefonoMovil), New ObjectParameter("TelefonoMovil", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim puestoParameter As ObjectParameter = If(puesto IsNot Nothing, New ObjectParameter("Puesto", puesto), New ObjectParameter("Puesto", GetType(String)))

        Dim tipoContactoClienteIdParameter As ObjectParameter = If(tipoContactoClienteId.HasValue, New ObjectParameter("TipoContactoClienteId", tipoContactoClienteId), New ObjectParameter("TipoContactoClienteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spInsContactoCliente_Result)("spInsContactoCliente", clienteIdParameter, nombreParameter, telefonoFijoParameter, telefonoMovilParameter, correoElectronicoParameter, puestoParameter, tipoContactoClienteIdParameter)
    End Function

    Public Overridable Function spUpdContactoCliente(clienteId As Nullable(Of Integer), contactoId As Nullable(Of Integer), nombre As String, telefonoFijo As String, telefonoMovil As String, correoElectronico As String, puesto As String, tipoContactoClienteId As Nullable(Of Integer)) As Integer
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim contactoIdParameter As ObjectParameter = If(contactoId.HasValue, New ObjectParameter("ContactoId", contactoId), New ObjectParameter("ContactoId", GetType(Integer)))

        Dim nombreParameter As ObjectParameter = If(nombre IsNot Nothing, New ObjectParameter("Nombre", nombre), New ObjectParameter("Nombre", GetType(String)))

        Dim telefonoFijoParameter As ObjectParameter = If(telefonoFijo IsNot Nothing, New ObjectParameter("TelefonoFijo", telefonoFijo), New ObjectParameter("TelefonoFijo", GetType(String)))

        Dim telefonoMovilParameter As ObjectParameter = If(telefonoMovil IsNot Nothing, New ObjectParameter("TelefonoMovil", telefonoMovil), New ObjectParameter("TelefonoMovil", GetType(String)))

        Dim correoElectronicoParameter As ObjectParameter = If(correoElectronico IsNot Nothing, New ObjectParameter("CorreoElectronico", correoElectronico), New ObjectParameter("CorreoElectronico", GetType(String)))

        Dim puestoParameter As ObjectParameter = If(puesto IsNot Nothing, New ObjectParameter("Puesto", puesto), New ObjectParameter("Puesto", GetType(String)))

        Dim tipoContactoClienteIdParameter As ObjectParameter = If(tipoContactoClienteId.HasValue, New ObjectParameter("TipoContactoClienteId", tipoContactoClienteId), New ObjectParameter("TipoContactoClienteId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spUpdContactoCliente", clienteIdParameter, contactoIdParameter, nombreParameter, telefonoFijoParameter, telefonoMovilParameter, correoElectronicoParameter, puestoParameter, tipoContactoClienteIdParameter)
    End Function

    Public Overridable Function spConsDomicilioCliente_ClienteId(clienteId As Nullable(Of Integer), organizacionId As Nullable(Of Integer), empresaId As Nullable(Of Integer)) As ObjectResult(Of spConsDomicilioCliente_ClienteId_Result)
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim organizacionIdParameter As ObjectParameter = If(organizacionId.HasValue, New ObjectParameter("OrganizacionId", organizacionId), New ObjectParameter("OrganizacionId", GetType(Integer)))

        Dim empresaIdParameter As ObjectParameter = If(empresaId.HasValue, New ObjectParameter("EmpresaId", empresaId), New ObjectParameter("EmpresaId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spConsDomicilioCliente_ClienteId_Result)("spConsDomicilioCliente_ClienteId", clienteIdParameter, organizacionIdParameter, empresaIdParameter)
    End Function

    Public Overridable Function spDelContactoCliente(clienteId As Nullable(Of Integer), contactoId As Nullable(Of Integer)) As Integer
        Dim clienteIdParameter As ObjectParameter = If(clienteId.HasValue, New ObjectParameter("ClienteId", clienteId), New ObjectParameter("ClienteId", GetType(Integer)))

        Dim contactoIdParameter As ObjectParameter = If(contactoId.HasValue, New ObjectParameter("ContactoId", contactoId), New ObjectParameter("ContactoId", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spDelContactoCliente", clienteIdParameter, contactoIdParameter)
    End Function

End Class
